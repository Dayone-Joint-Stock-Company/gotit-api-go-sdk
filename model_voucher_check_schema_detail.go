/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the VOUCHERCHECKSCHEMADETAIL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VOUCHERCHECKSCHEMADETAIL{}

// VOUCHERCHECKSCHEMADETAIL struct for VOUCHERCHECKSCHEMADETAIL
type VOUCHERCHECKSCHEMADETAIL struct {
	// TransactionRefId receive from client request
	TransactionRefId NullableString `json:"transactionRefId,omitempty"`
	// Voucher code. Contains 10 numbers, unique and not duplicated with any other voucher. For some brands that do not use Got It code but use integerernal code (Big C, Mobile World), the system returns the integerernal code.
	VoucherCode NullableString `json:"voucherCode,omitempty"`
	// Link of voucher
	VoucherLink NullableString `json:"voucherLink,omitempty"`
	// Cover link of voucher.
	VoucherCoverLink NullableString `json:"voucherCoverLink,omitempty"`
	// Is a unique code to identify voucher link v and is not valid for use. For example: V1562342ET2
	VoucherSerial NullableString `json:"voucherSerial,omitempty"`
	// https://e-stg.gotit.vn/gLsZaFRN
	GroupLink NullableString `json:"groupLink,omitempty"`
	// E2V2RML6F52
	GroupVoucherSerial NullableString `json:"groupVoucherSerial,omitempty"`
	// https://e-stg.gotit.vn/gLsZaFRN
	GroupCoverLink NullableString `json:"groupCoverLink,omitempty"`
	// Last 8 characters of voucher link
	VoucherLinkCode NullableString `json:"voucherLinkCode,omitempty"`
	// Link of voucher image. To display vouchers as images
	VoucherImageLink NullableString `json:"voucherImageLink,omitempty"`
	// Voucher expiration date
	ExpiryDate NullableString `json:"expiryDate,omitempty"`
	// State Code
	StateCode NullableInt64 `json:"stateCode,omitempty"`
	// State Text
	StateText NullableString `json:"stateText,omitempty"`
	UsedStore []STORESSCHEMA `json:"used_store,omitempty"`
	// Used Time
	UsedTime NullableString `json:"used_time,omitempty"`
	// State Text
	UsedBrand NullableString `json:"used_brand,omitempty"`
	Product *PRODUCTV `json:"product,omitempty"`
}

// NewVOUCHERCHECKSCHEMADETAIL instantiates a new VOUCHERCHECKSCHEMADETAIL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVOUCHERCHECKSCHEMADETAIL() *VOUCHERCHECKSCHEMADETAIL {
	this := VOUCHERCHECKSCHEMADETAIL{}
	return &this
}

// NewVOUCHERCHECKSCHEMADETAILWithDefaults instantiates a new VOUCHERCHECKSCHEMADETAIL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVOUCHERCHECKSCHEMADETAILWithDefaults() *VOUCHERCHECKSCHEMADETAIL {
	this := VOUCHERCHECKSCHEMADETAIL{}
	return &this
}

// GetTransactionRefId returns the TransactionRefId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetTransactionRefId() string {
	if o == nil || IsNil(o.TransactionRefId.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionRefId.Get()
}

// GetTransactionRefIdOk returns a tuple with the TransactionRefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetTransactionRefIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionRefId.Get(), o.TransactionRefId.IsSet()
}

// HasTransactionRefId returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasTransactionRefId() bool {
	if o != nil && o.TransactionRefId.IsSet() {
		return true
	}

	return false
}

// SetTransactionRefId gets a reference to the given NullableString and assigns it to the TransactionRefId field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetTransactionRefId(v string) {
	o.TransactionRefId.Set(&v)
}
// SetTransactionRefIdNil sets the value for TransactionRefId to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetTransactionRefIdNil() {
	o.TransactionRefId.Set(nil)
}

// UnsetTransactionRefId ensures that no value is present for TransactionRefId, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetTransactionRefId() {
	o.TransactionRefId.Unset()
}

// GetVoucherCode returns the VoucherCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherCode() string {
	if o == nil || IsNil(o.VoucherCode.Get()) {
		var ret string
		return ret
	}
	return *o.VoucherCode.Get()
}

// GetVoucherCodeOk returns a tuple with the VoucherCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoucherCode.Get(), o.VoucherCode.IsSet()
}

// HasVoucherCode returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasVoucherCode() bool {
	if o != nil && o.VoucherCode.IsSet() {
		return true
	}

	return false
}

// SetVoucherCode gets a reference to the given NullableString and assigns it to the VoucherCode field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherCode(v string) {
	o.VoucherCode.Set(&v)
}
// SetVoucherCodeNil sets the value for VoucherCode to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherCodeNil() {
	o.VoucherCode.Set(nil)
}

// UnsetVoucherCode ensures that no value is present for VoucherCode, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetVoucherCode() {
	o.VoucherCode.Unset()
}

// GetVoucherLink returns the VoucherLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherLink() string {
	if o == nil || IsNil(o.VoucherLink.Get()) {
		var ret string
		return ret
	}
	return *o.VoucherLink.Get()
}

// GetVoucherLinkOk returns a tuple with the VoucherLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoucherLink.Get(), o.VoucherLink.IsSet()
}

// HasVoucherLink returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasVoucherLink() bool {
	if o != nil && o.VoucherLink.IsSet() {
		return true
	}

	return false
}

// SetVoucherLink gets a reference to the given NullableString and assigns it to the VoucherLink field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherLink(v string) {
	o.VoucherLink.Set(&v)
}
// SetVoucherLinkNil sets the value for VoucherLink to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherLinkNil() {
	o.VoucherLink.Set(nil)
}

// UnsetVoucherLink ensures that no value is present for VoucherLink, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetVoucherLink() {
	o.VoucherLink.Unset()
}

// GetVoucherCoverLink returns the VoucherCoverLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherCoverLink() string {
	if o == nil || IsNil(o.VoucherCoverLink.Get()) {
		var ret string
		return ret
	}
	return *o.VoucherCoverLink.Get()
}

// GetVoucherCoverLinkOk returns a tuple with the VoucherCoverLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherCoverLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoucherCoverLink.Get(), o.VoucherCoverLink.IsSet()
}

// HasVoucherCoverLink returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasVoucherCoverLink() bool {
	if o != nil && o.VoucherCoverLink.IsSet() {
		return true
	}

	return false
}

// SetVoucherCoverLink gets a reference to the given NullableString and assigns it to the VoucherCoverLink field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherCoverLink(v string) {
	o.VoucherCoverLink.Set(&v)
}
// SetVoucherCoverLinkNil sets the value for VoucherCoverLink to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherCoverLinkNil() {
	o.VoucherCoverLink.Set(nil)
}

// UnsetVoucherCoverLink ensures that no value is present for VoucherCoverLink, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetVoucherCoverLink() {
	o.VoucherCoverLink.Unset()
}

// GetVoucherSerial returns the VoucherSerial field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherSerial() string {
	if o == nil || IsNil(o.VoucherSerial.Get()) {
		var ret string
		return ret
	}
	return *o.VoucherSerial.Get()
}

// GetVoucherSerialOk returns a tuple with the VoucherSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoucherSerial.Get(), o.VoucherSerial.IsSet()
}

// HasVoucherSerial returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasVoucherSerial() bool {
	if o != nil && o.VoucherSerial.IsSet() {
		return true
	}

	return false
}

// SetVoucherSerial gets a reference to the given NullableString and assigns it to the VoucherSerial field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherSerial(v string) {
	o.VoucherSerial.Set(&v)
}
// SetVoucherSerialNil sets the value for VoucherSerial to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherSerialNil() {
	o.VoucherSerial.Set(nil)
}

// UnsetVoucherSerial ensures that no value is present for VoucherSerial, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetVoucherSerial() {
	o.VoucherSerial.Unset()
}

// GetGroupLink returns the GroupLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetGroupLink() string {
	if o == nil || IsNil(o.GroupLink.Get()) {
		var ret string
		return ret
	}
	return *o.GroupLink.Get()
}

// GetGroupLinkOk returns a tuple with the GroupLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetGroupLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupLink.Get(), o.GroupLink.IsSet()
}

// HasGroupLink returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasGroupLink() bool {
	if o != nil && o.GroupLink.IsSet() {
		return true
	}

	return false
}

// SetGroupLink gets a reference to the given NullableString and assigns it to the GroupLink field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetGroupLink(v string) {
	o.GroupLink.Set(&v)
}
// SetGroupLinkNil sets the value for GroupLink to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetGroupLinkNil() {
	o.GroupLink.Set(nil)
}

// UnsetGroupLink ensures that no value is present for GroupLink, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetGroupLink() {
	o.GroupLink.Unset()
}

// GetGroupVoucherSerial returns the GroupVoucherSerial field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetGroupVoucherSerial() string {
	if o == nil || IsNil(o.GroupVoucherSerial.Get()) {
		var ret string
		return ret
	}
	return *o.GroupVoucherSerial.Get()
}

// GetGroupVoucherSerialOk returns a tuple with the GroupVoucherSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetGroupVoucherSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupVoucherSerial.Get(), o.GroupVoucherSerial.IsSet()
}

// HasGroupVoucherSerial returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasGroupVoucherSerial() bool {
	if o != nil && o.GroupVoucherSerial.IsSet() {
		return true
	}

	return false
}

// SetGroupVoucherSerial gets a reference to the given NullableString and assigns it to the GroupVoucherSerial field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetGroupVoucherSerial(v string) {
	o.GroupVoucherSerial.Set(&v)
}
// SetGroupVoucherSerialNil sets the value for GroupVoucherSerial to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetGroupVoucherSerialNil() {
	o.GroupVoucherSerial.Set(nil)
}

// UnsetGroupVoucherSerial ensures that no value is present for GroupVoucherSerial, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetGroupVoucherSerial() {
	o.GroupVoucherSerial.Unset()
}

// GetGroupCoverLink returns the GroupCoverLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetGroupCoverLink() string {
	if o == nil || IsNil(o.GroupCoverLink.Get()) {
		var ret string
		return ret
	}
	return *o.GroupCoverLink.Get()
}

// GetGroupCoverLinkOk returns a tuple with the GroupCoverLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetGroupCoverLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupCoverLink.Get(), o.GroupCoverLink.IsSet()
}

// HasGroupCoverLink returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasGroupCoverLink() bool {
	if o != nil && o.GroupCoverLink.IsSet() {
		return true
	}

	return false
}

// SetGroupCoverLink gets a reference to the given NullableString and assigns it to the GroupCoverLink field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetGroupCoverLink(v string) {
	o.GroupCoverLink.Set(&v)
}
// SetGroupCoverLinkNil sets the value for GroupCoverLink to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetGroupCoverLinkNil() {
	o.GroupCoverLink.Set(nil)
}

// UnsetGroupCoverLink ensures that no value is present for GroupCoverLink, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetGroupCoverLink() {
	o.GroupCoverLink.Unset()
}

// GetVoucherLinkCode returns the VoucherLinkCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherLinkCode() string {
	if o == nil || IsNil(o.VoucherLinkCode.Get()) {
		var ret string
		return ret
	}
	return *o.VoucherLinkCode.Get()
}

// GetVoucherLinkCodeOk returns a tuple with the VoucherLinkCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherLinkCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoucherLinkCode.Get(), o.VoucherLinkCode.IsSet()
}

// HasVoucherLinkCode returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasVoucherLinkCode() bool {
	if o != nil && o.VoucherLinkCode.IsSet() {
		return true
	}

	return false
}

// SetVoucherLinkCode gets a reference to the given NullableString and assigns it to the VoucherLinkCode field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherLinkCode(v string) {
	o.VoucherLinkCode.Set(&v)
}
// SetVoucherLinkCodeNil sets the value for VoucherLinkCode to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherLinkCodeNil() {
	o.VoucherLinkCode.Set(nil)
}

// UnsetVoucherLinkCode ensures that no value is present for VoucherLinkCode, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetVoucherLinkCode() {
	o.VoucherLinkCode.Unset()
}

// GetVoucherImageLink returns the VoucherImageLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherImageLink() string {
	if o == nil || IsNil(o.VoucherImageLink.Get()) {
		var ret string
		return ret
	}
	return *o.VoucherImageLink.Get()
}

// GetVoucherImageLinkOk returns a tuple with the VoucherImageLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetVoucherImageLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoucherImageLink.Get(), o.VoucherImageLink.IsSet()
}

// HasVoucherImageLink returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasVoucherImageLink() bool {
	if o != nil && o.VoucherImageLink.IsSet() {
		return true
	}

	return false
}

// SetVoucherImageLink gets a reference to the given NullableString and assigns it to the VoucherImageLink field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherImageLink(v string) {
	o.VoucherImageLink.Set(&v)
}
// SetVoucherImageLinkNil sets the value for VoucherImageLink to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetVoucherImageLinkNil() {
	o.VoucherImageLink.Set(nil)
}

// UnsetVoucherImageLink ensures that no value is present for VoucherImageLink, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetVoucherImageLink() {
	o.VoucherImageLink.Unset()
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetExpiryDate() string {
	if o == nil || IsNil(o.ExpiryDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiryDate.Get()
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetExpiryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiryDate.Get(), o.ExpiryDate.IsSet()
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate.IsSet() {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given NullableString and assigns it to the ExpiryDate field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetExpiryDate(v string) {
	o.ExpiryDate.Set(&v)
}
// SetExpiryDateNil sets the value for ExpiryDate to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetExpiryDateNil() {
	o.ExpiryDate.Set(nil)
}

// UnsetExpiryDate ensures that no value is present for ExpiryDate, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetExpiryDate() {
	o.ExpiryDate.Unset()
}

// GetStateCode returns the StateCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetStateCode() int64 {
	if o == nil || IsNil(o.StateCode.Get()) {
		var ret int64
		return ret
	}
	return *o.StateCode.Get()
}

// GetStateCodeOk returns a tuple with the StateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetStateCodeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateCode.Get(), o.StateCode.IsSet()
}

// HasStateCode returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasStateCode() bool {
	if o != nil && o.StateCode.IsSet() {
		return true
	}

	return false
}

// SetStateCode gets a reference to the given NullableInt64 and assigns it to the StateCode field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetStateCode(v int64) {
	o.StateCode.Set(&v)
}
// SetStateCodeNil sets the value for StateCode to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetStateCodeNil() {
	o.StateCode.Set(nil)
}

// UnsetStateCode ensures that no value is present for StateCode, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetStateCode() {
	o.StateCode.Unset()
}

// GetStateText returns the StateText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetStateText() string {
	if o == nil || IsNil(o.StateText.Get()) {
		var ret string
		return ret
	}
	return *o.StateText.Get()
}

// GetStateTextOk returns a tuple with the StateText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetStateTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateText.Get(), o.StateText.IsSet()
}

// HasStateText returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasStateText() bool {
	if o != nil && o.StateText.IsSet() {
		return true
	}

	return false
}

// SetStateText gets a reference to the given NullableString and assigns it to the StateText field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetStateText(v string) {
	o.StateText.Set(&v)
}
// SetStateTextNil sets the value for StateText to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetStateTextNil() {
	o.StateText.Set(nil)
}

// UnsetStateText ensures that no value is present for StateText, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetStateText() {
	o.StateText.Unset()
}

// GetUsedStore returns the UsedStore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetUsedStore() []STORESSCHEMA {
	if o == nil {
		var ret []STORESSCHEMA
		return ret
	}
	return o.UsedStore
}

// GetUsedStoreOk returns a tuple with the UsedStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetUsedStoreOk() ([]STORESSCHEMA, bool) {
	if o == nil || IsNil(o.UsedStore) {
		return nil, false
	}
	return o.UsedStore, true
}

// HasUsedStore returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasUsedStore() bool {
	if o != nil && !IsNil(o.UsedStore) {
		return true
	}

	return false
}

// SetUsedStore gets a reference to the given []STORESSCHEMA and assigns it to the UsedStore field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetUsedStore(v []STORESSCHEMA) {
	o.UsedStore = v
}

// GetUsedTime returns the UsedTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetUsedTime() string {
	if o == nil || IsNil(o.UsedTime.Get()) {
		var ret string
		return ret
	}
	return *o.UsedTime.Get()
}

// GetUsedTimeOk returns a tuple with the UsedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetUsedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsedTime.Get(), o.UsedTime.IsSet()
}

// HasUsedTime returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasUsedTime() bool {
	if o != nil && o.UsedTime.IsSet() {
		return true
	}

	return false
}

// SetUsedTime gets a reference to the given NullableString and assigns it to the UsedTime field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetUsedTime(v string) {
	o.UsedTime.Set(&v)
}
// SetUsedTimeNil sets the value for UsedTime to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetUsedTimeNil() {
	o.UsedTime.Set(nil)
}

// UnsetUsedTime ensures that no value is present for UsedTime, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetUsedTime() {
	o.UsedTime.Unset()
}

// GetUsedBrand returns the UsedBrand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERCHECKSCHEMADETAIL) GetUsedBrand() string {
	if o == nil || IsNil(o.UsedBrand.Get()) {
		var ret string
		return ret
	}
	return *o.UsedBrand.Get()
}

// GetUsedBrandOk returns a tuple with the UsedBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERCHECKSCHEMADETAIL) GetUsedBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsedBrand.Get(), o.UsedBrand.IsSet()
}

// HasUsedBrand returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasUsedBrand() bool {
	if o != nil && o.UsedBrand.IsSet() {
		return true
	}

	return false
}

// SetUsedBrand gets a reference to the given NullableString and assigns it to the UsedBrand field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetUsedBrand(v string) {
	o.UsedBrand.Set(&v)
}
// SetUsedBrandNil sets the value for UsedBrand to be an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) SetUsedBrandNil() {
	o.UsedBrand.Set(nil)
}

// UnsetUsedBrand ensures that no value is present for UsedBrand, not even an explicit nil
func (o *VOUCHERCHECKSCHEMADETAIL) UnsetUsedBrand() {
	o.UsedBrand.Unset()
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *VOUCHERCHECKSCHEMADETAIL) GetProduct() PRODUCTV {
	if o == nil || IsNil(o.Product) {
		var ret PRODUCTV
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) GetProductOk() (*PRODUCTV, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *VOUCHERCHECKSCHEMADETAIL) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given PRODUCTV and assigns it to the Product field.
func (o *VOUCHERCHECKSCHEMADETAIL) SetProduct(v PRODUCTV) {
	o.Product = &v
}

func (o VOUCHERCHECKSCHEMADETAIL) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VOUCHERCHECKSCHEMADETAIL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TransactionRefId.IsSet() {
		toSerialize["transactionRefId"] = o.TransactionRefId.Get()
	}
	if o.VoucherCode.IsSet() {
		toSerialize["voucherCode"] = o.VoucherCode.Get()
	}
	if o.VoucherLink.IsSet() {
		toSerialize["voucherLink"] = o.VoucherLink.Get()
	}
	if o.VoucherCoverLink.IsSet() {
		toSerialize["voucherCoverLink"] = o.VoucherCoverLink.Get()
	}
	if o.VoucherSerial.IsSet() {
		toSerialize["voucherSerial"] = o.VoucherSerial.Get()
	}
	if o.GroupLink.IsSet() {
		toSerialize["groupLink"] = o.GroupLink.Get()
	}
	if o.GroupVoucherSerial.IsSet() {
		toSerialize["groupVoucherSerial"] = o.GroupVoucherSerial.Get()
	}
	if o.GroupCoverLink.IsSet() {
		toSerialize["groupCoverLink"] = o.GroupCoverLink.Get()
	}
	if o.VoucherLinkCode.IsSet() {
		toSerialize["voucherLinkCode"] = o.VoucherLinkCode.Get()
	}
	if o.VoucherImageLink.IsSet() {
		toSerialize["voucherImageLink"] = o.VoucherImageLink.Get()
	}
	if o.ExpiryDate.IsSet() {
		toSerialize["expiryDate"] = o.ExpiryDate.Get()
	}
	if o.StateCode.IsSet() {
		toSerialize["stateCode"] = o.StateCode.Get()
	}
	if o.StateText.IsSet() {
		toSerialize["stateText"] = o.StateText.Get()
	}
	if o.UsedStore != nil {
		toSerialize["used_store"] = o.UsedStore
	}
	if o.UsedTime.IsSet() {
		toSerialize["used_time"] = o.UsedTime.Get()
	}
	if o.UsedBrand.IsSet() {
		toSerialize["used_brand"] = o.UsedBrand.Get()
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	return toSerialize, nil
}

type NullableVOUCHERCHECKSCHEMADETAIL struct {
	value *VOUCHERCHECKSCHEMADETAIL
	isSet bool
}

func (v NullableVOUCHERCHECKSCHEMADETAIL) Get() *VOUCHERCHECKSCHEMADETAIL {
	return v.value
}

func (v *NullableVOUCHERCHECKSCHEMADETAIL) Set(val *VOUCHERCHECKSCHEMADETAIL) {
	v.value = val
	v.isSet = true
}

func (v NullableVOUCHERCHECKSCHEMADETAIL) IsSet() bool {
	return v.isSet
}

func (v *NullableVOUCHERCHECKSCHEMADETAIL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVOUCHERCHECKSCHEMADETAIL(val *VOUCHERCHECKSCHEMADETAIL) *NullableVOUCHERCHECKSCHEMADETAIL {
	return &NullableVOUCHERCHECKSCHEMADETAIL{value: val, isSet: true}
}

func (v NullableVOUCHERCHECKSCHEMADETAIL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVOUCHERCHECKSCHEMADETAIL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


