/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PRODUCTDEFAULTLINKG type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PRODUCTDEFAULTLINKG{}

// PRODUCTDEFAULTLINKG struct for PRODUCTDEFAULTLINKG
type PRODUCTDEFAULTLINKG struct {
	// Product Id. You can see the Products section for the product id. Note: productId type auto convert merchant code does not support creating cover links.
	ProductId int64 `json:"productId"`
	// Product price id. Each product will have 1 or more denomination codes corresponding to the value or converted product size.
	ProductPriceId int64 `json:"productPriceId"`
	// Number of vouchers to be issued
	Quantity int64 `json:"quantity"`
}

type _PRODUCTDEFAULTLINKG PRODUCTDEFAULTLINKG

// NewPRODUCTDEFAULTLINKG instantiates a new PRODUCTDEFAULTLINKG object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPRODUCTDEFAULTLINKG(productId int64, productPriceId int64, quantity int64) *PRODUCTDEFAULTLINKG {
	this := PRODUCTDEFAULTLINKG{}
	this.ProductId = productId
	this.ProductPriceId = productPriceId
	this.Quantity = quantity
	return &this
}

// NewPRODUCTDEFAULTLINKGWithDefaults instantiates a new PRODUCTDEFAULTLINKG object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPRODUCTDEFAULTLINKGWithDefaults() *PRODUCTDEFAULTLINKG {
	this := PRODUCTDEFAULTLINKG{}
	return &this
}

// GetProductId returns the ProductId field value
func (o *PRODUCTDEFAULTLINKG) GetProductId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *PRODUCTDEFAULTLINKG) GetProductIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *PRODUCTDEFAULTLINKG) SetProductId(v int64) {
	o.ProductId = v
}

// GetProductPriceId returns the ProductPriceId field value
func (o *PRODUCTDEFAULTLINKG) GetProductPriceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProductPriceId
}

// GetProductPriceIdOk returns a tuple with the ProductPriceId field value
// and a boolean to check if the value has been set.
func (o *PRODUCTDEFAULTLINKG) GetProductPriceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductPriceId, true
}

// SetProductPriceId sets field value
func (o *PRODUCTDEFAULTLINKG) SetProductPriceId(v int64) {
	o.ProductPriceId = v
}

// GetQuantity returns the Quantity field value
func (o *PRODUCTDEFAULTLINKG) GetQuantity() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *PRODUCTDEFAULTLINKG) GetQuantityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *PRODUCTDEFAULTLINKG) SetQuantity(v int64) {
	o.Quantity = v
}

func (o PRODUCTDEFAULTLINKG) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PRODUCTDEFAULTLINKG) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["productId"] = o.ProductId
	toSerialize["productPriceId"] = o.ProductPriceId
	toSerialize["quantity"] = o.Quantity
	return toSerialize, nil
}

func (o *PRODUCTDEFAULTLINKG) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"productId",
		"productPriceId",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPRODUCTDEFAULTLINKG := _PRODUCTDEFAULTLINKG{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPRODUCTDEFAULTLINKG)

	if err != nil {
		return err
	}

	*o = PRODUCTDEFAULTLINKG(varPRODUCTDEFAULTLINKG)

	return err
}

type NullablePRODUCTDEFAULTLINKG struct {
	value *PRODUCTDEFAULTLINKG
	isSet bool
}

func (v NullablePRODUCTDEFAULTLINKG) Get() *PRODUCTDEFAULTLINKG {
	return v.value
}

func (v *NullablePRODUCTDEFAULTLINKG) Set(val *PRODUCTDEFAULTLINKG) {
	v.value = val
	v.isSet = true
}

func (v NullablePRODUCTDEFAULTLINKG) IsSet() bool {
	return v.isSet
}

func (v *NullablePRODUCTDEFAULTLINKG) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePRODUCTDEFAULTLINKG(val *PRODUCTDEFAULTLINKG) *NullablePRODUCTDEFAULTLINKG {
	return &NullablePRODUCTDEFAULTLINKG{value: val, isSet: true}
}

func (v NullablePRODUCTDEFAULTLINKG) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePRODUCTDEFAULTLINKG) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


