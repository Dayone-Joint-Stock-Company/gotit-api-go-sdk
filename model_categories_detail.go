/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the CATEGORIESDETAIL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CATEGORIESDETAIL{}

// CATEGORIESDETAIL struct for CATEGORIESDETAIL
type CATEGORIESDETAIL struct {
	// Category Id
	CategoryId NullableInt64 `json:"categoryId,omitempty"`
	// Category Name
	CategoryNm NullableString `json:"categoryNm,omitempty"`
	// Category Image
	CategoryImg NullableString `json:"categoryImg,omitempty"`
	// Category Slug
	Slug NullableString `json:"slug,omitempty"`
	// Category Short
	Order NullableInt64 `json:"order,omitempty"`
}

// NewCATEGORIESDETAIL instantiates a new CATEGORIESDETAIL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCATEGORIESDETAIL() *CATEGORIESDETAIL {
	this := CATEGORIESDETAIL{}
	return &this
}

// NewCATEGORIESDETAILWithDefaults instantiates a new CATEGORIESDETAIL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCATEGORIESDETAILWithDefaults() *CATEGORIESDETAIL {
	this := CATEGORIESDETAIL{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CATEGORIESDETAIL) GetCategoryId() int64 {
	if o == nil || IsNil(o.CategoryId.Get()) {
		var ret int64
		return ret
	}
	return *o.CategoryId.Get()
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CATEGORIESDETAIL) GetCategoryIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryId.Get(), o.CategoryId.IsSet()
}

// HasCategoryId returns a boolean if a field has been set.
func (o *CATEGORIESDETAIL) HasCategoryId() bool {
	if o != nil && o.CategoryId.IsSet() {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given NullableInt64 and assigns it to the CategoryId field.
func (o *CATEGORIESDETAIL) SetCategoryId(v int64) {
	o.CategoryId.Set(&v)
}
// SetCategoryIdNil sets the value for CategoryId to be an explicit nil
func (o *CATEGORIESDETAIL) SetCategoryIdNil() {
	o.CategoryId.Set(nil)
}

// UnsetCategoryId ensures that no value is present for CategoryId, not even an explicit nil
func (o *CATEGORIESDETAIL) UnsetCategoryId() {
	o.CategoryId.Unset()
}

// GetCategoryNm returns the CategoryNm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CATEGORIESDETAIL) GetCategoryNm() string {
	if o == nil || IsNil(o.CategoryNm.Get()) {
		var ret string
		return ret
	}
	return *o.CategoryNm.Get()
}

// GetCategoryNmOk returns a tuple with the CategoryNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CATEGORIESDETAIL) GetCategoryNmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryNm.Get(), o.CategoryNm.IsSet()
}

// HasCategoryNm returns a boolean if a field has been set.
func (o *CATEGORIESDETAIL) HasCategoryNm() bool {
	if o != nil && o.CategoryNm.IsSet() {
		return true
	}

	return false
}

// SetCategoryNm gets a reference to the given NullableString and assigns it to the CategoryNm field.
func (o *CATEGORIESDETAIL) SetCategoryNm(v string) {
	o.CategoryNm.Set(&v)
}
// SetCategoryNmNil sets the value for CategoryNm to be an explicit nil
func (o *CATEGORIESDETAIL) SetCategoryNmNil() {
	o.CategoryNm.Set(nil)
}

// UnsetCategoryNm ensures that no value is present for CategoryNm, not even an explicit nil
func (o *CATEGORIESDETAIL) UnsetCategoryNm() {
	o.CategoryNm.Unset()
}

// GetCategoryImg returns the CategoryImg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CATEGORIESDETAIL) GetCategoryImg() string {
	if o == nil || IsNil(o.CategoryImg.Get()) {
		var ret string
		return ret
	}
	return *o.CategoryImg.Get()
}

// GetCategoryImgOk returns a tuple with the CategoryImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CATEGORIESDETAIL) GetCategoryImgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryImg.Get(), o.CategoryImg.IsSet()
}

// HasCategoryImg returns a boolean if a field has been set.
func (o *CATEGORIESDETAIL) HasCategoryImg() bool {
	if o != nil && o.CategoryImg.IsSet() {
		return true
	}

	return false
}

// SetCategoryImg gets a reference to the given NullableString and assigns it to the CategoryImg field.
func (o *CATEGORIESDETAIL) SetCategoryImg(v string) {
	o.CategoryImg.Set(&v)
}
// SetCategoryImgNil sets the value for CategoryImg to be an explicit nil
func (o *CATEGORIESDETAIL) SetCategoryImgNil() {
	o.CategoryImg.Set(nil)
}

// UnsetCategoryImg ensures that no value is present for CategoryImg, not even an explicit nil
func (o *CATEGORIESDETAIL) UnsetCategoryImg() {
	o.CategoryImg.Unset()
}

// GetSlug returns the Slug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CATEGORIESDETAIL) GetSlug() string {
	if o == nil || IsNil(o.Slug.Get()) {
		var ret string
		return ret
	}
	return *o.Slug.Get()
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CATEGORIESDETAIL) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Slug.Get(), o.Slug.IsSet()
}

// HasSlug returns a boolean if a field has been set.
func (o *CATEGORIESDETAIL) HasSlug() bool {
	if o != nil && o.Slug.IsSet() {
		return true
	}

	return false
}

// SetSlug gets a reference to the given NullableString and assigns it to the Slug field.
func (o *CATEGORIESDETAIL) SetSlug(v string) {
	o.Slug.Set(&v)
}
// SetSlugNil sets the value for Slug to be an explicit nil
func (o *CATEGORIESDETAIL) SetSlugNil() {
	o.Slug.Set(nil)
}

// UnsetSlug ensures that no value is present for Slug, not even an explicit nil
func (o *CATEGORIESDETAIL) UnsetSlug() {
	o.Slug.Unset()
}

// GetOrder returns the Order field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CATEGORIESDETAIL) GetOrder() int64 {
	if o == nil || IsNil(o.Order.Get()) {
		var ret int64
		return ret
	}
	return *o.Order.Get()
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CATEGORIESDETAIL) GetOrderOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Order.Get(), o.Order.IsSet()
}

// HasOrder returns a boolean if a field has been set.
func (o *CATEGORIESDETAIL) HasOrder() bool {
	if o != nil && o.Order.IsSet() {
		return true
	}

	return false
}

// SetOrder gets a reference to the given NullableInt64 and assigns it to the Order field.
func (o *CATEGORIESDETAIL) SetOrder(v int64) {
	o.Order.Set(&v)
}
// SetOrderNil sets the value for Order to be an explicit nil
func (o *CATEGORIESDETAIL) SetOrderNil() {
	o.Order.Set(nil)
}

// UnsetOrder ensures that no value is present for Order, not even an explicit nil
func (o *CATEGORIESDETAIL) UnsetOrder() {
	o.Order.Unset()
}

func (o CATEGORIESDETAIL) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CATEGORIESDETAIL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CategoryId.IsSet() {
		toSerialize["categoryId"] = o.CategoryId.Get()
	}
	if o.CategoryNm.IsSet() {
		toSerialize["categoryNm"] = o.CategoryNm.Get()
	}
	if o.CategoryImg.IsSet() {
		toSerialize["categoryImg"] = o.CategoryImg.Get()
	}
	if o.Slug.IsSet() {
		toSerialize["slug"] = o.Slug.Get()
	}
	if o.Order.IsSet() {
		toSerialize["order"] = o.Order.Get()
	}
	return toSerialize, nil
}

type NullableCATEGORIESDETAIL struct {
	value *CATEGORIESDETAIL
	isSet bool
}

func (v NullableCATEGORIESDETAIL) Get() *CATEGORIESDETAIL {
	return v.value
}

func (v *NullableCATEGORIESDETAIL) Set(val *CATEGORIESDETAIL) {
	v.value = val
	v.isSet = true
}

func (v NullableCATEGORIESDETAIL) IsSet() bool {
	return v.isSet
}

func (v *NullableCATEGORIESDETAIL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCATEGORIESDETAIL(val *CATEGORIESDETAIL) *NullableCATEGORIESDETAIL {
	return &NullableCATEGORIESDETAIL{value: val, isSet: true}
}

func (v NullableCATEGORIESDETAIL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCATEGORIESDETAIL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


