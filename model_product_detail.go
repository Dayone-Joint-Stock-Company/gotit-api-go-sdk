/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the PRODUCTDETAIL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PRODUCTDETAIL{}

// PRODUCTDETAIL struct for PRODUCTDETAIL
type PRODUCTDETAIL struct {
	// Product Id
	ProductId *int64 `json:"productId,omitempty"`
	// Product Name
	ProductNm *string `json:"productNm,omitempty"`
	// Link product image
	ProductImg *string `json:"productImg,omitempty"`
	// Array of link image
	ProductSubImg []interface{} `json:"productSubImg,omitempty"`
	// Brand id
	BrandId *int64 `json:"brandId,omitempty"`
	// Brand name
	BrandNm *string `json:"brandNm,omitempty"`
	// c (cash) hoáº·c i (item)
	ProductType *string `json:"productType,omitempty"`
	// Slug of brand
	BrandNameSlug *string `json:"brandNameSlug,omitempty"`
	// Phone of brand
	BrandPhone *string `json:"brandPhone,omitempty"`
	// Address of brand
	BrandAddress *string `json:"brandAddress,omitempty"`
	// Description of brand
	BrandDesc *string `json:"brandDesc,omitempty"`
	// T&C of brand
	BrandServiceGuide *string `json:"brandServiceGuide,omitempty"`
	// T&C of product
	ServiceGuide *string `json:"serviceGuide,omitempty"`
	// Link to brand logo image
	BrandLogo *string `json:"brandLogo,omitempty"`
	Link *string `json:"link,omitempty"`
	Prices []PRODUCTPRICESCHEMA `json:"prices,omitempty"`
	// Slug of product
	NameSlug *string `json:"nameSlug,omitempty"`
	// Product Description
	ProductDesc *string `json:"productDesc,omitempty"`
	// Product Short Description
	ProductShortDesc *string `json:"productShortDesc,omitempty"`
	// Terms of use
	Terms *string `json:"terms,omitempty"`
	// Category Id
	CategoryId *int64 `json:"categoryId,omitempty"`
	// Category Name
	CategoryNm *string `json:"categoryNm,omitempty"`
	// Category Image
	CategoryImg *string `json:"categoryImg,omitempty"`
	BrandRedeem []BRANDREEDEMSCHEMA `json:"brandRedeem,omitempty"`
	StoreList []STORESSCHEMA `json:"storeList,omitempty"`
}

// NewPRODUCTDETAIL instantiates a new PRODUCTDETAIL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPRODUCTDETAIL() *PRODUCTDETAIL {
	this := PRODUCTDETAIL{}
	return &this
}

// NewPRODUCTDETAILWithDefaults instantiates a new PRODUCTDETAIL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPRODUCTDETAILWithDefaults() *PRODUCTDETAIL {
	this := PRODUCTDETAIL{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId) {
		var ret int64
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetProductIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int64 and assigns it to the ProductId field.
func (o *PRODUCTDETAIL) SetProductId(v int64) {
	o.ProductId = &v
}

// GetProductNm returns the ProductNm field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetProductNm() string {
	if o == nil || IsNil(o.ProductNm) {
		var ret string
		return ret
	}
	return *o.ProductNm
}

// GetProductNmOk returns a tuple with the ProductNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetProductNmOk() (*string, bool) {
	if o == nil || IsNil(o.ProductNm) {
		return nil, false
	}
	return o.ProductNm, true
}

// HasProductNm returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasProductNm() bool {
	if o != nil && !IsNil(o.ProductNm) {
		return true
	}

	return false
}

// SetProductNm gets a reference to the given string and assigns it to the ProductNm field.
func (o *PRODUCTDETAIL) SetProductNm(v string) {
	o.ProductNm = &v
}

// GetProductImg returns the ProductImg field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetProductImg() string {
	if o == nil || IsNil(o.ProductImg) {
		var ret string
		return ret
	}
	return *o.ProductImg
}

// GetProductImgOk returns a tuple with the ProductImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetProductImgOk() (*string, bool) {
	if o == nil || IsNil(o.ProductImg) {
		return nil, false
	}
	return o.ProductImg, true
}

// HasProductImg returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasProductImg() bool {
	if o != nil && !IsNil(o.ProductImg) {
		return true
	}

	return false
}

// SetProductImg gets a reference to the given string and assigns it to the ProductImg field.
func (o *PRODUCTDETAIL) SetProductImg(v string) {
	o.ProductImg = &v
}

// GetProductSubImg returns the ProductSubImg field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetProductSubImg() []interface{} {
	if o == nil || IsNil(o.ProductSubImg) {
		var ret []interface{}
		return ret
	}
	return o.ProductSubImg
}

// GetProductSubImgOk returns a tuple with the ProductSubImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetProductSubImgOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.ProductSubImg) {
		return nil, false
	}
	return o.ProductSubImg, true
}

// HasProductSubImg returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasProductSubImg() bool {
	if o != nil && !IsNil(o.ProductSubImg) {
		return true
	}

	return false
}

// SetProductSubImg gets a reference to the given []interface{} and assigns it to the ProductSubImg field.
func (o *PRODUCTDETAIL) SetProductSubImg(v []interface{}) {
	o.ProductSubImg = v
}

// GetBrandId returns the BrandId field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandId() int64 {
	if o == nil || IsNil(o.BrandId) {
		var ret int64
		return ret
	}
	return *o.BrandId
}

// GetBrandIdOk returns a tuple with the BrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BrandId) {
		return nil, false
	}
	return o.BrandId, true
}

// HasBrandId returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandId() bool {
	if o != nil && !IsNil(o.BrandId) {
		return true
	}

	return false
}

// SetBrandId gets a reference to the given int64 and assigns it to the BrandId field.
func (o *PRODUCTDETAIL) SetBrandId(v int64) {
	o.BrandId = &v
}

// GetBrandNm returns the BrandNm field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandNm() string {
	if o == nil || IsNil(o.BrandNm) {
		var ret string
		return ret
	}
	return *o.BrandNm
}

// GetBrandNmOk returns a tuple with the BrandNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandNmOk() (*string, bool) {
	if o == nil || IsNil(o.BrandNm) {
		return nil, false
	}
	return o.BrandNm, true
}

// HasBrandNm returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandNm() bool {
	if o != nil && !IsNil(o.BrandNm) {
		return true
	}

	return false
}

// SetBrandNm gets a reference to the given string and assigns it to the BrandNm field.
func (o *PRODUCTDETAIL) SetBrandNm(v string) {
	o.BrandNm = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *PRODUCTDETAIL) SetProductType(v string) {
	o.ProductType = &v
}

// GetBrandNameSlug returns the BrandNameSlug field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandNameSlug() string {
	if o == nil || IsNil(o.BrandNameSlug) {
		var ret string
		return ret
	}
	return *o.BrandNameSlug
}

// GetBrandNameSlugOk returns a tuple with the BrandNameSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandNameSlugOk() (*string, bool) {
	if o == nil || IsNil(o.BrandNameSlug) {
		return nil, false
	}
	return o.BrandNameSlug, true
}

// HasBrandNameSlug returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandNameSlug() bool {
	if o != nil && !IsNil(o.BrandNameSlug) {
		return true
	}

	return false
}

// SetBrandNameSlug gets a reference to the given string and assigns it to the BrandNameSlug field.
func (o *PRODUCTDETAIL) SetBrandNameSlug(v string) {
	o.BrandNameSlug = &v
}

// GetBrandPhone returns the BrandPhone field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandPhone() string {
	if o == nil || IsNil(o.BrandPhone) {
		var ret string
		return ret
	}
	return *o.BrandPhone
}

// GetBrandPhoneOk returns a tuple with the BrandPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.BrandPhone) {
		return nil, false
	}
	return o.BrandPhone, true
}

// HasBrandPhone returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandPhone() bool {
	if o != nil && !IsNil(o.BrandPhone) {
		return true
	}

	return false
}

// SetBrandPhone gets a reference to the given string and assigns it to the BrandPhone field.
func (o *PRODUCTDETAIL) SetBrandPhone(v string) {
	o.BrandPhone = &v
}

// GetBrandAddress returns the BrandAddress field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandAddress() string {
	if o == nil || IsNil(o.BrandAddress) {
		var ret string
		return ret
	}
	return *o.BrandAddress
}

// GetBrandAddressOk returns a tuple with the BrandAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandAddressOk() (*string, bool) {
	if o == nil || IsNil(o.BrandAddress) {
		return nil, false
	}
	return o.BrandAddress, true
}

// HasBrandAddress returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandAddress() bool {
	if o != nil && !IsNil(o.BrandAddress) {
		return true
	}

	return false
}

// SetBrandAddress gets a reference to the given string and assigns it to the BrandAddress field.
func (o *PRODUCTDETAIL) SetBrandAddress(v string) {
	o.BrandAddress = &v
}

// GetBrandDesc returns the BrandDesc field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandDesc() string {
	if o == nil || IsNil(o.BrandDesc) {
		var ret string
		return ret
	}
	return *o.BrandDesc
}

// GetBrandDescOk returns a tuple with the BrandDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandDescOk() (*string, bool) {
	if o == nil || IsNil(o.BrandDesc) {
		return nil, false
	}
	return o.BrandDesc, true
}

// HasBrandDesc returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandDesc() bool {
	if o != nil && !IsNil(o.BrandDesc) {
		return true
	}

	return false
}

// SetBrandDesc gets a reference to the given string and assigns it to the BrandDesc field.
func (o *PRODUCTDETAIL) SetBrandDesc(v string) {
	o.BrandDesc = &v
}

// GetBrandServiceGuide returns the BrandServiceGuide field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandServiceGuide() string {
	if o == nil || IsNil(o.BrandServiceGuide) {
		var ret string
		return ret
	}
	return *o.BrandServiceGuide
}

// GetBrandServiceGuideOk returns a tuple with the BrandServiceGuide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandServiceGuideOk() (*string, bool) {
	if o == nil || IsNil(o.BrandServiceGuide) {
		return nil, false
	}
	return o.BrandServiceGuide, true
}

// HasBrandServiceGuide returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandServiceGuide() bool {
	if o != nil && !IsNil(o.BrandServiceGuide) {
		return true
	}

	return false
}

// SetBrandServiceGuide gets a reference to the given string and assigns it to the BrandServiceGuide field.
func (o *PRODUCTDETAIL) SetBrandServiceGuide(v string) {
	o.BrandServiceGuide = &v
}

// GetServiceGuide returns the ServiceGuide field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetServiceGuide() string {
	if o == nil || IsNil(o.ServiceGuide) {
		var ret string
		return ret
	}
	return *o.ServiceGuide
}

// GetServiceGuideOk returns a tuple with the ServiceGuide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetServiceGuideOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceGuide) {
		return nil, false
	}
	return o.ServiceGuide, true
}

// HasServiceGuide returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasServiceGuide() bool {
	if o != nil && !IsNil(o.ServiceGuide) {
		return true
	}

	return false
}

// SetServiceGuide gets a reference to the given string and assigns it to the ServiceGuide field.
func (o *PRODUCTDETAIL) SetServiceGuide(v string) {
	o.ServiceGuide = &v
}

// GetBrandLogo returns the BrandLogo field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandLogo() string {
	if o == nil || IsNil(o.BrandLogo) {
		var ret string
		return ret
	}
	return *o.BrandLogo
}

// GetBrandLogoOk returns a tuple with the BrandLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandLogoOk() (*string, bool) {
	if o == nil || IsNil(o.BrandLogo) {
		return nil, false
	}
	return o.BrandLogo, true
}

// HasBrandLogo returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandLogo() bool {
	if o != nil && !IsNil(o.BrandLogo) {
		return true
	}

	return false
}

// SetBrandLogo gets a reference to the given string and assigns it to the BrandLogo field.
func (o *PRODUCTDETAIL) SetBrandLogo(v string) {
	o.BrandLogo = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *PRODUCTDETAIL) SetLink(v string) {
	o.Link = &v
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetPrices() []PRODUCTPRICESCHEMA {
	if o == nil || IsNil(o.Prices) {
		var ret []PRODUCTPRICESCHEMA
		return ret
	}
	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetPricesOk() ([]PRODUCTPRICESCHEMA, bool) {
	if o == nil || IsNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given []PRODUCTPRICESCHEMA and assigns it to the Prices field.
func (o *PRODUCTDETAIL) SetPrices(v []PRODUCTPRICESCHEMA) {
	o.Prices = v
}

// GetNameSlug returns the NameSlug field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetNameSlug() string {
	if o == nil || IsNil(o.NameSlug) {
		var ret string
		return ret
	}
	return *o.NameSlug
}

// GetNameSlugOk returns a tuple with the NameSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetNameSlugOk() (*string, bool) {
	if o == nil || IsNil(o.NameSlug) {
		return nil, false
	}
	return o.NameSlug, true
}

// HasNameSlug returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasNameSlug() bool {
	if o != nil && !IsNil(o.NameSlug) {
		return true
	}

	return false
}

// SetNameSlug gets a reference to the given string and assigns it to the NameSlug field.
func (o *PRODUCTDETAIL) SetNameSlug(v string) {
	o.NameSlug = &v
}

// GetProductDesc returns the ProductDesc field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetProductDesc() string {
	if o == nil || IsNil(o.ProductDesc) {
		var ret string
		return ret
	}
	return *o.ProductDesc
}

// GetProductDescOk returns a tuple with the ProductDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetProductDescOk() (*string, bool) {
	if o == nil || IsNil(o.ProductDesc) {
		return nil, false
	}
	return o.ProductDesc, true
}

// HasProductDesc returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasProductDesc() bool {
	if o != nil && !IsNil(o.ProductDesc) {
		return true
	}

	return false
}

// SetProductDesc gets a reference to the given string and assigns it to the ProductDesc field.
func (o *PRODUCTDETAIL) SetProductDesc(v string) {
	o.ProductDesc = &v
}

// GetProductShortDesc returns the ProductShortDesc field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetProductShortDesc() string {
	if o == nil || IsNil(o.ProductShortDesc) {
		var ret string
		return ret
	}
	return *o.ProductShortDesc
}

// GetProductShortDescOk returns a tuple with the ProductShortDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetProductShortDescOk() (*string, bool) {
	if o == nil || IsNil(o.ProductShortDesc) {
		return nil, false
	}
	return o.ProductShortDesc, true
}

// HasProductShortDesc returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasProductShortDesc() bool {
	if o != nil && !IsNil(o.ProductShortDesc) {
		return true
	}

	return false
}

// SetProductShortDesc gets a reference to the given string and assigns it to the ProductShortDesc field.
func (o *PRODUCTDETAIL) SetProductShortDesc(v string) {
	o.ProductShortDesc = &v
}

// GetTerms returns the Terms field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetTerms() string {
	if o == nil || IsNil(o.Terms) {
		var ret string
		return ret
	}
	return *o.Terms
}

// GetTermsOk returns a tuple with the Terms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetTermsOk() (*string, bool) {
	if o == nil || IsNil(o.Terms) {
		return nil, false
	}
	return o.Terms, true
}

// HasTerms returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasTerms() bool {
	if o != nil && !IsNil(o.Terms) {
		return true
	}

	return false
}

// SetTerms gets a reference to the given string and assigns it to the Terms field.
func (o *PRODUCTDETAIL) SetTerms(v string) {
	o.Terms = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetCategoryId() int64 {
	if o == nil || IsNil(o.CategoryId) {
		var ret int64
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetCategoryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given int64 and assigns it to the CategoryId field.
func (o *PRODUCTDETAIL) SetCategoryId(v int64) {
	o.CategoryId = &v
}

// GetCategoryNm returns the CategoryNm field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetCategoryNm() string {
	if o == nil || IsNil(o.CategoryNm) {
		var ret string
		return ret
	}
	return *o.CategoryNm
}

// GetCategoryNmOk returns a tuple with the CategoryNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetCategoryNmOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryNm) {
		return nil, false
	}
	return o.CategoryNm, true
}

// HasCategoryNm returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasCategoryNm() bool {
	if o != nil && !IsNil(o.CategoryNm) {
		return true
	}

	return false
}

// SetCategoryNm gets a reference to the given string and assigns it to the CategoryNm field.
func (o *PRODUCTDETAIL) SetCategoryNm(v string) {
	o.CategoryNm = &v
}

// GetCategoryImg returns the CategoryImg field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetCategoryImg() string {
	if o == nil || IsNil(o.CategoryImg) {
		var ret string
		return ret
	}
	return *o.CategoryImg
}

// GetCategoryImgOk returns a tuple with the CategoryImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetCategoryImgOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryImg) {
		return nil, false
	}
	return o.CategoryImg, true
}

// HasCategoryImg returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasCategoryImg() bool {
	if o != nil && !IsNil(o.CategoryImg) {
		return true
	}

	return false
}

// SetCategoryImg gets a reference to the given string and assigns it to the CategoryImg field.
func (o *PRODUCTDETAIL) SetCategoryImg(v string) {
	o.CategoryImg = &v
}

// GetBrandRedeem returns the BrandRedeem field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetBrandRedeem() []BRANDREEDEMSCHEMA {
	if o == nil || IsNil(o.BrandRedeem) {
		var ret []BRANDREEDEMSCHEMA
		return ret
	}
	return o.BrandRedeem
}

// GetBrandRedeemOk returns a tuple with the BrandRedeem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetBrandRedeemOk() ([]BRANDREEDEMSCHEMA, bool) {
	if o == nil || IsNil(o.BrandRedeem) {
		return nil, false
	}
	return o.BrandRedeem, true
}

// HasBrandRedeem returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasBrandRedeem() bool {
	if o != nil && !IsNil(o.BrandRedeem) {
		return true
	}

	return false
}

// SetBrandRedeem gets a reference to the given []BRANDREEDEMSCHEMA and assigns it to the BrandRedeem field.
func (o *PRODUCTDETAIL) SetBrandRedeem(v []BRANDREEDEMSCHEMA) {
	o.BrandRedeem = v
}

// GetStoreList returns the StoreList field value if set, zero value otherwise.
func (o *PRODUCTDETAIL) GetStoreList() []STORESSCHEMA {
	if o == nil || IsNil(o.StoreList) {
		var ret []STORESSCHEMA
		return ret
	}
	return o.StoreList
}

// GetStoreListOk returns a tuple with the StoreList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTDETAIL) GetStoreListOk() ([]STORESSCHEMA, bool) {
	if o == nil || IsNil(o.StoreList) {
		return nil, false
	}
	return o.StoreList, true
}

// HasStoreList returns a boolean if a field has been set.
func (o *PRODUCTDETAIL) HasStoreList() bool {
	if o != nil && !IsNil(o.StoreList) {
		return true
	}

	return false
}

// SetStoreList gets a reference to the given []STORESSCHEMA and assigns it to the StoreList field.
func (o *PRODUCTDETAIL) SetStoreList(v []STORESSCHEMA) {
	o.StoreList = v
}

func (o PRODUCTDETAIL) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PRODUCTDETAIL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.ProductNm) {
		toSerialize["productNm"] = o.ProductNm
	}
	if !IsNil(o.ProductImg) {
		toSerialize["productImg"] = o.ProductImg
	}
	if !IsNil(o.ProductSubImg) {
		toSerialize["productSubImg"] = o.ProductSubImg
	}
	if !IsNil(o.BrandId) {
		toSerialize["brandId"] = o.BrandId
	}
	if !IsNil(o.BrandNm) {
		toSerialize["brandNm"] = o.BrandNm
	}
	if !IsNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	if !IsNil(o.BrandNameSlug) {
		toSerialize["brandNameSlug"] = o.BrandNameSlug
	}
	if !IsNil(o.BrandPhone) {
		toSerialize["brandPhone"] = o.BrandPhone
	}
	if !IsNil(o.BrandAddress) {
		toSerialize["brandAddress"] = o.BrandAddress
	}
	if !IsNil(o.BrandDesc) {
		toSerialize["brandDesc"] = o.BrandDesc
	}
	if !IsNil(o.BrandServiceGuide) {
		toSerialize["brandServiceGuide"] = o.BrandServiceGuide
	}
	if !IsNil(o.ServiceGuide) {
		toSerialize["serviceGuide"] = o.ServiceGuide
	}
	if !IsNil(o.BrandLogo) {
		toSerialize["brandLogo"] = o.BrandLogo
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	if !IsNil(o.NameSlug) {
		toSerialize["nameSlug"] = o.NameSlug
	}
	if !IsNil(o.ProductDesc) {
		toSerialize["productDesc"] = o.ProductDesc
	}
	if !IsNil(o.ProductShortDesc) {
		toSerialize["productShortDesc"] = o.ProductShortDesc
	}
	if !IsNil(o.Terms) {
		toSerialize["terms"] = o.Terms
	}
	if !IsNil(o.CategoryId) {
		toSerialize["categoryId"] = o.CategoryId
	}
	if !IsNil(o.CategoryNm) {
		toSerialize["categoryNm"] = o.CategoryNm
	}
	if !IsNil(o.CategoryImg) {
		toSerialize["categoryImg"] = o.CategoryImg
	}
	if !IsNil(o.BrandRedeem) {
		toSerialize["brandRedeem"] = o.BrandRedeem
	}
	if !IsNil(o.StoreList) {
		toSerialize["storeList"] = o.StoreList
	}
	return toSerialize, nil
}

type NullablePRODUCTDETAIL struct {
	value *PRODUCTDETAIL
	isSet bool
}

func (v NullablePRODUCTDETAIL) Get() *PRODUCTDETAIL {
	return v.value
}

func (v *NullablePRODUCTDETAIL) Set(val *PRODUCTDETAIL) {
	v.value = val
	v.isSet = true
}

func (v NullablePRODUCTDETAIL) IsSet() bool {
	return v.isSet
}

func (v *NullablePRODUCTDETAIL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePRODUCTDETAIL(val *PRODUCTDETAIL) *NullablePRODUCTDETAIL {
	return &NullablePRODUCTDETAIL{value: val, isSet: true}
}

func (v NullablePRODUCTDETAIL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePRODUCTDETAIL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


