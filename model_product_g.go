/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the PRODUCTG type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PRODUCTG{}

// PRODUCTG struct for PRODUCTG
type PRODUCTG struct {
	ProductImage NullableString `json:"product_image,omitempty"`
	Link NullableString `json:"link,omitempty"`
	Code NullableString `json:"code,omitempty"`
	Serial NullableString `json:"serial,omitempty"`
	ProductId NullableInt64 `json:"product_id,omitempty"`
	PriceId NullableInt64 `json:"price_id,omitempty"`
	Value NullableInt64 `json:"value,omitempty"`
	ExpiredDate NullableString `json:"expired_date,omitempty"`
	Partner *VENDORSCHEMA `json:"partner,omitempty"`
}

// NewPRODUCTG instantiates a new PRODUCTG object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPRODUCTG() *PRODUCTG {
	this := PRODUCTG{}
	return &this
}

// NewPRODUCTGWithDefaults instantiates a new PRODUCTG object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPRODUCTGWithDefaults() *PRODUCTG {
	this := PRODUCTG{}
	return &this
}

// GetProductImage returns the ProductImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTG) GetProductImage() string {
	if o == nil || IsNil(o.ProductImage.Get()) {
		var ret string
		return ret
	}
	return *o.ProductImage.Get()
}

// GetProductImageOk returns a tuple with the ProductImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTG) GetProductImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductImage.Get(), o.ProductImage.IsSet()
}

// HasProductImage returns a boolean if a field has been set.
func (o *PRODUCTG) HasProductImage() bool {
	if o != nil && o.ProductImage.IsSet() {
		return true
	}

	return false
}

// SetProductImage gets a reference to the given NullableString and assigns it to the ProductImage field.
func (o *PRODUCTG) SetProductImage(v string) {
	o.ProductImage.Set(&v)
}
// SetProductImageNil sets the value for ProductImage to be an explicit nil
func (o *PRODUCTG) SetProductImageNil() {
	o.ProductImage.Set(nil)
}

// UnsetProductImage ensures that no value is present for ProductImage, not even an explicit nil
func (o *PRODUCTG) UnsetProductImage() {
	o.ProductImage.Unset()
}

// GetLink returns the Link field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTG) GetLink() string {
	if o == nil || IsNil(o.Link.Get()) {
		var ret string
		return ret
	}
	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTG) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// HasLink returns a boolean if a field has been set.
func (o *PRODUCTG) HasLink() bool {
	if o != nil && o.Link.IsSet() {
		return true
	}

	return false
}

// SetLink gets a reference to the given NullableString and assigns it to the Link field.
func (o *PRODUCTG) SetLink(v string) {
	o.Link.Set(&v)
}
// SetLinkNil sets the value for Link to be an explicit nil
func (o *PRODUCTG) SetLinkNil() {
	o.Link.Set(nil)
}

// UnsetLink ensures that no value is present for Link, not even an explicit nil
func (o *PRODUCTG) UnsetLink() {
	o.Link.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTG) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTG) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *PRODUCTG) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *PRODUCTG) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *PRODUCTG) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *PRODUCTG) UnsetCode() {
	o.Code.Unset()
}

// GetSerial returns the Serial field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTG) GetSerial() string {
	if o == nil || IsNil(o.Serial.Get()) {
		var ret string
		return ret
	}
	return *o.Serial.Get()
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTG) GetSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Serial.Get(), o.Serial.IsSet()
}

// HasSerial returns a boolean if a field has been set.
func (o *PRODUCTG) HasSerial() bool {
	if o != nil && o.Serial.IsSet() {
		return true
	}

	return false
}

// SetSerial gets a reference to the given NullableString and assigns it to the Serial field.
func (o *PRODUCTG) SetSerial(v string) {
	o.Serial.Set(&v)
}
// SetSerialNil sets the value for Serial to be an explicit nil
func (o *PRODUCTG) SetSerialNil() {
	o.Serial.Set(nil)
}

// UnsetSerial ensures that no value is present for Serial, not even an explicit nil
func (o *PRODUCTG) UnsetSerial() {
	o.Serial.Unset()
}

// GetProductId returns the ProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTG) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId.Get()) {
		var ret int64
		return ret
	}
	return *o.ProductId.Get()
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTG) GetProductIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId.Get(), o.ProductId.IsSet()
}

// HasProductId returns a boolean if a field has been set.
func (o *PRODUCTG) HasProductId() bool {
	if o != nil && o.ProductId.IsSet() {
		return true
	}

	return false
}

// SetProductId gets a reference to the given NullableInt64 and assigns it to the ProductId field.
func (o *PRODUCTG) SetProductId(v int64) {
	o.ProductId.Set(&v)
}
// SetProductIdNil sets the value for ProductId to be an explicit nil
func (o *PRODUCTG) SetProductIdNil() {
	o.ProductId.Set(nil)
}

// UnsetProductId ensures that no value is present for ProductId, not even an explicit nil
func (o *PRODUCTG) UnsetProductId() {
	o.ProductId.Unset()
}

// GetPriceId returns the PriceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTG) GetPriceId() int64 {
	if o == nil || IsNil(o.PriceId.Get()) {
		var ret int64
		return ret
	}
	return *o.PriceId.Get()
}

// GetPriceIdOk returns a tuple with the PriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTG) GetPriceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceId.Get(), o.PriceId.IsSet()
}

// HasPriceId returns a boolean if a field has been set.
func (o *PRODUCTG) HasPriceId() bool {
	if o != nil && o.PriceId.IsSet() {
		return true
	}

	return false
}

// SetPriceId gets a reference to the given NullableInt64 and assigns it to the PriceId field.
func (o *PRODUCTG) SetPriceId(v int64) {
	o.PriceId.Set(&v)
}
// SetPriceIdNil sets the value for PriceId to be an explicit nil
func (o *PRODUCTG) SetPriceIdNil() {
	o.PriceId.Set(nil)
}

// UnsetPriceId ensures that no value is present for PriceId, not even an explicit nil
func (o *PRODUCTG) UnsetPriceId() {
	o.PriceId.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTG) GetValue() int64 {
	if o == nil || IsNil(o.Value.Get()) {
		var ret int64
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTG) GetValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *PRODUCTG) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableInt64 and assigns it to the Value field.
func (o *PRODUCTG) SetValue(v int64) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *PRODUCTG) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *PRODUCTG) UnsetValue() {
	o.Value.Unset()
}

// GetExpiredDate returns the ExpiredDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTG) GetExpiredDate() string {
	if o == nil || IsNil(o.ExpiredDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiredDate.Get()
}

// GetExpiredDateOk returns a tuple with the ExpiredDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTG) GetExpiredDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiredDate.Get(), o.ExpiredDate.IsSet()
}

// HasExpiredDate returns a boolean if a field has been set.
func (o *PRODUCTG) HasExpiredDate() bool {
	if o != nil && o.ExpiredDate.IsSet() {
		return true
	}

	return false
}

// SetExpiredDate gets a reference to the given NullableString and assigns it to the ExpiredDate field.
func (o *PRODUCTG) SetExpiredDate(v string) {
	o.ExpiredDate.Set(&v)
}
// SetExpiredDateNil sets the value for ExpiredDate to be an explicit nil
func (o *PRODUCTG) SetExpiredDateNil() {
	o.ExpiredDate.Set(nil)
}

// UnsetExpiredDate ensures that no value is present for ExpiredDate, not even an explicit nil
func (o *PRODUCTG) UnsetExpiredDate() {
	o.ExpiredDate.Unset()
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *PRODUCTG) GetPartner() VENDORSCHEMA {
	if o == nil || IsNil(o.Partner) {
		var ret VENDORSCHEMA
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTG) GetPartnerOk() (*VENDORSCHEMA, bool) {
	if o == nil || IsNil(o.Partner) {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *PRODUCTG) HasPartner() bool {
	if o != nil && !IsNil(o.Partner) {
		return true
	}

	return false
}

// SetPartner gets a reference to the given VENDORSCHEMA and assigns it to the Partner field.
func (o *PRODUCTG) SetPartner(v VENDORSCHEMA) {
	o.Partner = &v
}

func (o PRODUCTG) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PRODUCTG) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductImage.IsSet() {
		toSerialize["product_image"] = o.ProductImage.Get()
	}
	if o.Link.IsSet() {
		toSerialize["link"] = o.Link.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Serial.IsSet() {
		toSerialize["serial"] = o.Serial.Get()
	}
	if o.ProductId.IsSet() {
		toSerialize["product_id"] = o.ProductId.Get()
	}
	if o.PriceId.IsSet() {
		toSerialize["price_id"] = o.PriceId.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.ExpiredDate.IsSet() {
		toSerialize["expired_date"] = o.ExpiredDate.Get()
	}
	if !IsNil(o.Partner) {
		toSerialize["partner"] = o.Partner
	}
	return toSerialize, nil
}

type NullablePRODUCTG struct {
	value *PRODUCTG
	isSet bool
}

func (v NullablePRODUCTG) Get() *PRODUCTG {
	return v.value
}

func (v *NullablePRODUCTG) Set(val *PRODUCTG) {
	v.value = val
	v.isSet = true
}

func (v NullablePRODUCTG) IsSet() bool {
	return v.isSet
}

func (v *NullablePRODUCTG) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePRODUCTG(val *PRODUCTG) *NullablePRODUCTG {
	return &NullablePRODUCTG{value: val, isSet: true}
}

func (v NullablePRODUCTG) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePRODUCTG) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


