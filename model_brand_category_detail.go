/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the BRANDCATEGORYDETAIL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BRANDCATEGORYDETAIL{}

// BRANDCATEGORYDETAIL struct for BRANDCATEGORYDETAIL
type BRANDCATEGORYDETAIL struct {
	// Brand id
	BrandId NullableInt64 `json:"brandId,omitempty"`
	// Brand name
	BrandNm NullableString `json:"brandNm,omitempty"`
	// Link to brand logo image
	BrandLogo NullableString `json:"brandLogo,omitempty"`
	// Brand short description
	ShortDesc NullableString `json:"shortDesc,omitempty"`
	// Brand description
	Description NullableString `json:"description,omitempty"`
	Order NullableInt64 `json:"order,omitempty"`
	// Describe the brand's terms of reference (T&C). HTML format
	ServiceGuide NullableString `json:"serviceGuide,omitempty"`
	// Information on the brand's applicable channels
	UsageMethods []USAGEMETHODSCHEMA `json:"usageMethods,omitempty"`
}

// NewBRANDCATEGORYDETAIL instantiates a new BRANDCATEGORYDETAIL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBRANDCATEGORYDETAIL() *BRANDCATEGORYDETAIL {
	this := BRANDCATEGORYDETAIL{}
	return &this
}

// NewBRANDCATEGORYDETAILWithDefaults instantiates a new BRANDCATEGORYDETAIL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBRANDCATEGORYDETAILWithDefaults() *BRANDCATEGORYDETAIL {
	this := BRANDCATEGORYDETAIL{}
	return &this
}

// GetBrandId returns the BrandId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDCATEGORYDETAIL) GetBrandId() int64 {
	if o == nil || IsNil(o.BrandId.Get()) {
		var ret int64
		return ret
	}
	return *o.BrandId.Get()
}

// GetBrandIdOk returns a tuple with the BrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDCATEGORYDETAIL) GetBrandIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandId.Get(), o.BrandId.IsSet()
}

// HasBrandId returns a boolean if a field has been set.
func (o *BRANDCATEGORYDETAIL) HasBrandId() bool {
	if o != nil && o.BrandId.IsSet() {
		return true
	}

	return false
}

// SetBrandId gets a reference to the given NullableInt64 and assigns it to the BrandId field.
func (o *BRANDCATEGORYDETAIL) SetBrandId(v int64) {
	o.BrandId.Set(&v)
}
// SetBrandIdNil sets the value for BrandId to be an explicit nil
func (o *BRANDCATEGORYDETAIL) SetBrandIdNil() {
	o.BrandId.Set(nil)
}

// UnsetBrandId ensures that no value is present for BrandId, not even an explicit nil
func (o *BRANDCATEGORYDETAIL) UnsetBrandId() {
	o.BrandId.Unset()
}

// GetBrandNm returns the BrandNm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDCATEGORYDETAIL) GetBrandNm() string {
	if o == nil || IsNil(o.BrandNm.Get()) {
		var ret string
		return ret
	}
	return *o.BrandNm.Get()
}

// GetBrandNmOk returns a tuple with the BrandNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDCATEGORYDETAIL) GetBrandNmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandNm.Get(), o.BrandNm.IsSet()
}

// HasBrandNm returns a boolean if a field has been set.
func (o *BRANDCATEGORYDETAIL) HasBrandNm() bool {
	if o != nil && o.BrandNm.IsSet() {
		return true
	}

	return false
}

// SetBrandNm gets a reference to the given NullableString and assigns it to the BrandNm field.
func (o *BRANDCATEGORYDETAIL) SetBrandNm(v string) {
	o.BrandNm.Set(&v)
}
// SetBrandNmNil sets the value for BrandNm to be an explicit nil
func (o *BRANDCATEGORYDETAIL) SetBrandNmNil() {
	o.BrandNm.Set(nil)
}

// UnsetBrandNm ensures that no value is present for BrandNm, not even an explicit nil
func (o *BRANDCATEGORYDETAIL) UnsetBrandNm() {
	o.BrandNm.Unset()
}

// GetBrandLogo returns the BrandLogo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDCATEGORYDETAIL) GetBrandLogo() string {
	if o == nil || IsNil(o.BrandLogo.Get()) {
		var ret string
		return ret
	}
	return *o.BrandLogo.Get()
}

// GetBrandLogoOk returns a tuple with the BrandLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDCATEGORYDETAIL) GetBrandLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandLogo.Get(), o.BrandLogo.IsSet()
}

// HasBrandLogo returns a boolean if a field has been set.
func (o *BRANDCATEGORYDETAIL) HasBrandLogo() bool {
	if o != nil && o.BrandLogo.IsSet() {
		return true
	}

	return false
}

// SetBrandLogo gets a reference to the given NullableString and assigns it to the BrandLogo field.
func (o *BRANDCATEGORYDETAIL) SetBrandLogo(v string) {
	o.BrandLogo.Set(&v)
}
// SetBrandLogoNil sets the value for BrandLogo to be an explicit nil
func (o *BRANDCATEGORYDETAIL) SetBrandLogoNil() {
	o.BrandLogo.Set(nil)
}

// UnsetBrandLogo ensures that no value is present for BrandLogo, not even an explicit nil
func (o *BRANDCATEGORYDETAIL) UnsetBrandLogo() {
	o.BrandLogo.Unset()
}

// GetShortDesc returns the ShortDesc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDCATEGORYDETAIL) GetShortDesc() string {
	if o == nil || IsNil(o.ShortDesc.Get()) {
		var ret string
		return ret
	}
	return *o.ShortDesc.Get()
}

// GetShortDescOk returns a tuple with the ShortDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDCATEGORYDETAIL) GetShortDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortDesc.Get(), o.ShortDesc.IsSet()
}

// HasShortDesc returns a boolean if a field has been set.
func (o *BRANDCATEGORYDETAIL) HasShortDesc() bool {
	if o != nil && o.ShortDesc.IsSet() {
		return true
	}

	return false
}

// SetShortDesc gets a reference to the given NullableString and assigns it to the ShortDesc field.
func (o *BRANDCATEGORYDETAIL) SetShortDesc(v string) {
	o.ShortDesc.Set(&v)
}
// SetShortDescNil sets the value for ShortDesc to be an explicit nil
func (o *BRANDCATEGORYDETAIL) SetShortDescNil() {
	o.ShortDesc.Set(nil)
}

// UnsetShortDesc ensures that no value is present for ShortDesc, not even an explicit nil
func (o *BRANDCATEGORYDETAIL) UnsetShortDesc() {
	o.ShortDesc.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDCATEGORYDETAIL) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDCATEGORYDETAIL) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BRANDCATEGORYDETAIL) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BRANDCATEGORYDETAIL) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BRANDCATEGORYDETAIL) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BRANDCATEGORYDETAIL) UnsetDescription() {
	o.Description.Unset()
}

// GetOrder returns the Order field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDCATEGORYDETAIL) GetOrder() int64 {
	if o == nil || IsNil(o.Order.Get()) {
		var ret int64
		return ret
	}
	return *o.Order.Get()
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDCATEGORYDETAIL) GetOrderOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Order.Get(), o.Order.IsSet()
}

// HasOrder returns a boolean if a field has been set.
func (o *BRANDCATEGORYDETAIL) HasOrder() bool {
	if o != nil && o.Order.IsSet() {
		return true
	}

	return false
}

// SetOrder gets a reference to the given NullableInt64 and assigns it to the Order field.
func (o *BRANDCATEGORYDETAIL) SetOrder(v int64) {
	o.Order.Set(&v)
}
// SetOrderNil sets the value for Order to be an explicit nil
func (o *BRANDCATEGORYDETAIL) SetOrderNil() {
	o.Order.Set(nil)
}

// UnsetOrder ensures that no value is present for Order, not even an explicit nil
func (o *BRANDCATEGORYDETAIL) UnsetOrder() {
	o.Order.Unset()
}

// GetServiceGuide returns the ServiceGuide field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDCATEGORYDETAIL) GetServiceGuide() string {
	if o == nil || IsNil(o.ServiceGuide.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceGuide.Get()
}

// GetServiceGuideOk returns a tuple with the ServiceGuide field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDCATEGORYDETAIL) GetServiceGuideOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceGuide.Get(), o.ServiceGuide.IsSet()
}

// HasServiceGuide returns a boolean if a field has been set.
func (o *BRANDCATEGORYDETAIL) HasServiceGuide() bool {
	if o != nil && o.ServiceGuide.IsSet() {
		return true
	}

	return false
}

// SetServiceGuide gets a reference to the given NullableString and assigns it to the ServiceGuide field.
func (o *BRANDCATEGORYDETAIL) SetServiceGuide(v string) {
	o.ServiceGuide.Set(&v)
}
// SetServiceGuideNil sets the value for ServiceGuide to be an explicit nil
func (o *BRANDCATEGORYDETAIL) SetServiceGuideNil() {
	o.ServiceGuide.Set(nil)
}

// UnsetServiceGuide ensures that no value is present for ServiceGuide, not even an explicit nil
func (o *BRANDCATEGORYDETAIL) UnsetServiceGuide() {
	o.ServiceGuide.Unset()
}

// GetUsageMethods returns the UsageMethods field value if set, zero value otherwise.
func (o *BRANDCATEGORYDETAIL) GetUsageMethods() []USAGEMETHODSCHEMA {
	if o == nil || IsNil(o.UsageMethods) {
		var ret []USAGEMETHODSCHEMA
		return ret
	}
	return o.UsageMethods
}

// GetUsageMethodsOk returns a tuple with the UsageMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BRANDCATEGORYDETAIL) GetUsageMethodsOk() ([]USAGEMETHODSCHEMA, bool) {
	if o == nil || IsNil(o.UsageMethods) {
		return nil, false
	}
	return o.UsageMethods, true
}

// HasUsageMethods returns a boolean if a field has been set.
func (o *BRANDCATEGORYDETAIL) HasUsageMethods() bool {
	if o != nil && !IsNil(o.UsageMethods) {
		return true
	}

	return false
}

// SetUsageMethods gets a reference to the given []USAGEMETHODSCHEMA and assigns it to the UsageMethods field.
func (o *BRANDCATEGORYDETAIL) SetUsageMethods(v []USAGEMETHODSCHEMA) {
	o.UsageMethods = v
}

func (o BRANDCATEGORYDETAIL) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BRANDCATEGORYDETAIL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BrandId.IsSet() {
		toSerialize["brandId"] = o.BrandId.Get()
	}
	if o.BrandNm.IsSet() {
		toSerialize["brandNm"] = o.BrandNm.Get()
	}
	if o.BrandLogo.IsSet() {
		toSerialize["brandLogo"] = o.BrandLogo.Get()
	}
	if o.ShortDesc.IsSet() {
		toSerialize["shortDesc"] = o.ShortDesc.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Order.IsSet() {
		toSerialize["order"] = o.Order.Get()
	}
	if o.ServiceGuide.IsSet() {
		toSerialize["serviceGuide"] = o.ServiceGuide.Get()
	}
	if !IsNil(o.UsageMethods) {
		toSerialize["usageMethods"] = o.UsageMethods
	}
	return toSerialize, nil
}

type NullableBRANDCATEGORYDETAIL struct {
	value *BRANDCATEGORYDETAIL
	isSet bool
}

func (v NullableBRANDCATEGORYDETAIL) Get() *BRANDCATEGORYDETAIL {
	return v.value
}

func (v *NullableBRANDCATEGORYDETAIL) Set(val *BRANDCATEGORYDETAIL) {
	v.value = val
	v.isSet = true
}

func (v NullableBRANDCATEGORYDETAIL) IsSet() bool {
	return v.isSet
}

func (v *NullableBRANDCATEGORYDETAIL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBRANDCATEGORYDETAIL(val *BRANDCATEGORYDETAIL) *NullableBRANDCATEGORYDETAIL {
	return &NullableBRANDCATEGORYDETAIL{value: val, isSet: true}
}

func (v NullableBRANDCATEGORYDETAIL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBRANDCATEGORYDETAIL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


