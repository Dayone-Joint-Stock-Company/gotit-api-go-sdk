/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the STOREPRODUCTSCHEMA type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &STOREPRODUCTSCHEMA{}

// STOREPRODUCTSCHEMA struct for STOREPRODUCTSCHEMA
type STOREPRODUCTSCHEMA struct {
	// Store Id
	StoreId NullableInt64 `json:"storeId,omitempty"`
	// Store Name
	StoreNm NullableString `json:"storeNm,omitempty"`
	// Store Address
	StoreAddr NullableString `json:"storeAddr,omitempty"`
	// Lat location on Google maps
	Lat NullableFloat32 `json:"lat,omitempty"`
	// Long location on Google maps
	Long NullableFloat32 `json:"long,omitempty"`
	// Store Phone
	Phone NullableString `json:"phone,omitempty"`
	// City code (Got It identifier)
	CityId NullableInt64 `json:"city_id,omitempty"`
	// City name
	City NullableString `json:"city,omitempty"`
	// District code (Got It identifier)
	DistId NullableInt64 `json:"dist_id,omitempty"`
	// District name
	District NullableString `json:"district,omitempty"`
}

// NewSTOREPRODUCTSCHEMA instantiates a new STOREPRODUCTSCHEMA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSTOREPRODUCTSCHEMA() *STOREPRODUCTSCHEMA {
	this := STOREPRODUCTSCHEMA{}
	return &this
}

// NewSTOREPRODUCTSCHEMAWithDefaults instantiates a new STOREPRODUCTSCHEMA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSTOREPRODUCTSCHEMAWithDefaults() *STOREPRODUCTSCHEMA {
	this := STOREPRODUCTSCHEMA{}
	return &this
}

// GetStoreId returns the StoreId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetStoreId() int64 {
	if o == nil || IsNil(o.StoreId.Get()) {
		var ret int64
		return ret
	}
	return *o.StoreId.Get()
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetStoreIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreId.Get(), o.StoreId.IsSet()
}

// HasStoreId returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasStoreId() bool {
	if o != nil && o.StoreId.IsSet() {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given NullableInt64 and assigns it to the StoreId field.
func (o *STOREPRODUCTSCHEMA) SetStoreId(v int64) {
	o.StoreId.Set(&v)
}
// SetStoreIdNil sets the value for StoreId to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetStoreIdNil() {
	o.StoreId.Set(nil)
}

// UnsetStoreId ensures that no value is present for StoreId, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetStoreId() {
	o.StoreId.Unset()
}

// GetStoreNm returns the StoreNm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetStoreNm() string {
	if o == nil || IsNil(o.StoreNm.Get()) {
		var ret string
		return ret
	}
	return *o.StoreNm.Get()
}

// GetStoreNmOk returns a tuple with the StoreNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetStoreNmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreNm.Get(), o.StoreNm.IsSet()
}

// HasStoreNm returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasStoreNm() bool {
	if o != nil && o.StoreNm.IsSet() {
		return true
	}

	return false
}

// SetStoreNm gets a reference to the given NullableString and assigns it to the StoreNm field.
func (o *STOREPRODUCTSCHEMA) SetStoreNm(v string) {
	o.StoreNm.Set(&v)
}
// SetStoreNmNil sets the value for StoreNm to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetStoreNmNil() {
	o.StoreNm.Set(nil)
}

// UnsetStoreNm ensures that no value is present for StoreNm, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetStoreNm() {
	o.StoreNm.Unset()
}

// GetStoreAddr returns the StoreAddr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetStoreAddr() string {
	if o == nil || IsNil(o.StoreAddr.Get()) {
		var ret string
		return ret
	}
	return *o.StoreAddr.Get()
}

// GetStoreAddrOk returns a tuple with the StoreAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetStoreAddrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreAddr.Get(), o.StoreAddr.IsSet()
}

// HasStoreAddr returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasStoreAddr() bool {
	if o != nil && o.StoreAddr.IsSet() {
		return true
	}

	return false
}

// SetStoreAddr gets a reference to the given NullableString and assigns it to the StoreAddr field.
func (o *STOREPRODUCTSCHEMA) SetStoreAddr(v string) {
	o.StoreAddr.Set(&v)
}
// SetStoreAddrNil sets the value for StoreAddr to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetStoreAddrNil() {
	o.StoreAddr.Set(nil)
}

// UnsetStoreAddr ensures that no value is present for StoreAddr, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetStoreAddr() {
	o.StoreAddr.Unset()
}

// GetLat returns the Lat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetLat() float32 {
	if o == nil || IsNil(o.Lat.Get()) {
		var ret float32
		return ret
	}
	return *o.Lat.Get()
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetLatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lat.Get(), o.Lat.IsSet()
}

// HasLat returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasLat() bool {
	if o != nil && o.Lat.IsSet() {
		return true
	}

	return false
}

// SetLat gets a reference to the given NullableFloat32 and assigns it to the Lat field.
func (o *STOREPRODUCTSCHEMA) SetLat(v float32) {
	o.Lat.Set(&v)
}
// SetLatNil sets the value for Lat to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetLatNil() {
	o.Lat.Set(nil)
}

// UnsetLat ensures that no value is present for Lat, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetLat() {
	o.Lat.Unset()
}

// GetLong returns the Long field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetLong() float32 {
	if o == nil || IsNil(o.Long.Get()) {
		var ret float32
		return ret
	}
	return *o.Long.Get()
}

// GetLongOk returns a tuple with the Long field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetLongOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Long.Get(), o.Long.IsSet()
}

// HasLong returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasLong() bool {
	if o != nil && o.Long.IsSet() {
		return true
	}

	return false
}

// SetLong gets a reference to the given NullableFloat32 and assigns it to the Long field.
func (o *STOREPRODUCTSCHEMA) SetLong(v float32) {
	o.Long.Set(&v)
}
// SetLongNil sets the value for Long to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetLongNil() {
	o.Long.Set(nil)
}

// UnsetLong ensures that no value is present for Long, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetLong() {
	o.Long.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *STOREPRODUCTSCHEMA) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetPhone() {
	o.Phone.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetCityId() int64 {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret int64
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetCityIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableInt64 and assigns it to the CityId field.
func (o *STOREPRODUCTSCHEMA) SetCityId(v int64) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetCityId() {
	o.CityId.Unset()
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetCity() string {
	if o == nil || IsNil(o.City.Get()) {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *STOREPRODUCTSCHEMA) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetCity() {
	o.City.Unset()
}

// GetDistId returns the DistId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetDistId() int64 {
	if o == nil || IsNil(o.DistId.Get()) {
		var ret int64
		return ret
	}
	return *o.DistId.Get()
}

// GetDistIdOk returns a tuple with the DistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetDistIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DistId.Get(), o.DistId.IsSet()
}

// HasDistId returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasDistId() bool {
	if o != nil && o.DistId.IsSet() {
		return true
	}

	return false
}

// SetDistId gets a reference to the given NullableInt64 and assigns it to the DistId field.
func (o *STOREPRODUCTSCHEMA) SetDistId(v int64) {
	o.DistId.Set(&v)
}
// SetDistIdNil sets the value for DistId to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetDistIdNil() {
	o.DistId.Set(nil)
}

// UnsetDistId ensures that no value is present for DistId, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetDistId() {
	o.DistId.Unset()
}

// GetDistrict returns the District field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *STOREPRODUCTSCHEMA) GetDistrict() string {
	if o == nil || IsNil(o.District.Get()) {
		var ret string
		return ret
	}
	return *o.District.Get()
}

// GetDistrictOk returns a tuple with the District field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *STOREPRODUCTSCHEMA) GetDistrictOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.District.Get(), o.District.IsSet()
}

// HasDistrict returns a boolean if a field has been set.
func (o *STOREPRODUCTSCHEMA) HasDistrict() bool {
	if o != nil && o.District.IsSet() {
		return true
	}

	return false
}

// SetDistrict gets a reference to the given NullableString and assigns it to the District field.
func (o *STOREPRODUCTSCHEMA) SetDistrict(v string) {
	o.District.Set(&v)
}
// SetDistrictNil sets the value for District to be an explicit nil
func (o *STOREPRODUCTSCHEMA) SetDistrictNil() {
	o.District.Set(nil)
}

// UnsetDistrict ensures that no value is present for District, not even an explicit nil
func (o *STOREPRODUCTSCHEMA) UnsetDistrict() {
	o.District.Unset()
}

func (o STOREPRODUCTSCHEMA) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o STOREPRODUCTSCHEMA) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.StoreId.IsSet() {
		toSerialize["storeId"] = o.StoreId.Get()
	}
	if o.StoreNm.IsSet() {
		toSerialize["storeNm"] = o.StoreNm.Get()
	}
	if o.StoreAddr.IsSet() {
		toSerialize["storeAddr"] = o.StoreAddr.Get()
	}
	if o.Lat.IsSet() {
		toSerialize["lat"] = o.Lat.Get()
	}
	if o.Long.IsSet() {
		toSerialize["long"] = o.Long.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["city_id"] = o.CityId.Get()
	}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if o.DistId.IsSet() {
		toSerialize["dist_id"] = o.DistId.Get()
	}
	if o.District.IsSet() {
		toSerialize["district"] = o.District.Get()
	}
	return toSerialize, nil
}

type NullableSTOREPRODUCTSCHEMA struct {
	value *STOREPRODUCTSCHEMA
	isSet bool
}

func (v NullableSTOREPRODUCTSCHEMA) Get() *STOREPRODUCTSCHEMA {
	return v.value
}

func (v *NullableSTOREPRODUCTSCHEMA) Set(val *STOREPRODUCTSCHEMA) {
	v.value = val
	v.isSet = true
}

func (v NullableSTOREPRODUCTSCHEMA) IsSet() bool {
	return v.isSet
}

func (v *NullableSTOREPRODUCTSCHEMA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSTOREPRODUCTSCHEMA(val *STOREPRODUCTSCHEMA) *NullableSTOREPRODUCTSCHEMA {
	return &NullableSTOREPRODUCTSCHEMA{value: val, isSet: true}
}

func (v NullableSTOREPRODUCTSCHEMA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSTOREPRODUCTSCHEMA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


