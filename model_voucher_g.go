/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the VOUCHERG type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VOUCHERG{}

// VOUCHERG struct for VOUCHERG
type VOUCHERG struct {
	// Order name from client request
	OrderName NullableString `json:"orderName,omitempty"`
	Vouchers []VOUCHERGSCHEMA `json:"vouchers,omitempty"`
}

// NewVOUCHERG instantiates a new VOUCHERG object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVOUCHERG() *VOUCHERG {
	this := VOUCHERG{}
	return &this
}

// NewVOUCHERGWithDefaults instantiates a new VOUCHERG object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVOUCHERGWithDefaults() *VOUCHERG {
	this := VOUCHERG{}
	return &this
}

// GetOrderName returns the OrderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VOUCHERG) GetOrderName() string {
	if o == nil || IsNil(o.OrderName.Get()) {
		var ret string
		return ret
	}
	return *o.OrderName.Get()
}

// GetOrderNameOk returns a tuple with the OrderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VOUCHERG) GetOrderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderName.Get(), o.OrderName.IsSet()
}

// HasOrderName returns a boolean if a field has been set.
func (o *VOUCHERG) HasOrderName() bool {
	if o != nil && o.OrderName.IsSet() {
		return true
	}

	return false
}

// SetOrderName gets a reference to the given NullableString and assigns it to the OrderName field.
func (o *VOUCHERG) SetOrderName(v string) {
	o.OrderName.Set(&v)
}
// SetOrderNameNil sets the value for OrderName to be an explicit nil
func (o *VOUCHERG) SetOrderNameNil() {
	o.OrderName.Set(nil)
}

// UnsetOrderName ensures that no value is present for OrderName, not even an explicit nil
func (o *VOUCHERG) UnsetOrderName() {
	o.OrderName.Unset()
}

// GetVouchers returns the Vouchers field value if set, zero value otherwise.
func (o *VOUCHERG) GetVouchers() []VOUCHERGSCHEMA {
	if o == nil || IsNil(o.Vouchers) {
		var ret []VOUCHERGSCHEMA
		return ret
	}
	return o.Vouchers
}

// GetVouchersOk returns a tuple with the Vouchers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VOUCHERG) GetVouchersOk() ([]VOUCHERGSCHEMA, bool) {
	if o == nil || IsNil(o.Vouchers) {
		return nil, false
	}
	return o.Vouchers, true
}

// HasVouchers returns a boolean if a field has been set.
func (o *VOUCHERG) HasVouchers() bool {
	if o != nil && !IsNil(o.Vouchers) {
		return true
	}

	return false
}

// SetVouchers gets a reference to the given []VOUCHERGSCHEMA and assigns it to the Vouchers field.
func (o *VOUCHERG) SetVouchers(v []VOUCHERGSCHEMA) {
	o.Vouchers = v
}

func (o VOUCHERG) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VOUCHERG) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderName.IsSet() {
		toSerialize["orderName"] = o.OrderName.Get()
	}
	if !IsNil(o.Vouchers) {
		toSerialize["vouchers"] = o.Vouchers
	}
	return toSerialize, nil
}

type NullableVOUCHERG struct {
	value *VOUCHERG
	isSet bool
}

func (v NullableVOUCHERG) Get() *VOUCHERG {
	return v.value
}

func (v *NullableVOUCHERG) Set(val *VOUCHERG) {
	v.value = val
	v.isSet = true
}

func (v NullableVOUCHERG) IsSet() bool {
	return v.isSet
}

func (v *NullableVOUCHERG) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVOUCHERG(val *VOUCHERG) *NullableVOUCHERG {
	return &NullableVOUCHERG{value: val, isSet: true}
}

func (v NullableVOUCHERG) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVOUCHERG) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


