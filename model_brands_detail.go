/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the BRANDSDETAIL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BRANDSDETAIL{}

// BRANDSDETAIL struct for BRANDSDETAIL
type BRANDSDETAIL struct {
	// Brand id
	BrandId NullableInt64 `json:"brandId,omitempty"`
	// Brand name
	BrandNm NullableString `json:"brandNm,omitempty"`
	// Link to brand logo image
	BrandLogo NullableString `json:"brandLogo,omitempty"`
	// Brand name used for URL
	Slug NullableString `json:"slug,omitempty"`
	// Brand short description
	ShortDesc interface{} `json:"shortDesc,omitempty"`
	Description NullableString `json:"description,omitempty"`
	// Array containing a list of Categories codes to which the Brand belongs
	CategoryID []interface{} `json:"categoryID,omitempty"`
	// The serial number displays the brand
	Order NullableInt64 `json:"order,omitempty"`
	// Describe the brand's terms of reference (T&C). HTML format
	ServiceGuide interface{} `json:"serviceGuide,omitempty"`
	Stores []STORESSCHEMA `json:"stores,omitempty"`
	// Information on the brand's applicable channels
	UsageMethods []USAGEMETHODSCHEMA `json:"usageMethods,omitempty"`
}

// NewBRANDSDETAIL instantiates a new BRANDSDETAIL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBRANDSDETAIL() *BRANDSDETAIL {
	this := BRANDSDETAIL{}
	return &this
}

// NewBRANDSDETAILWithDefaults instantiates a new BRANDSDETAIL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBRANDSDETAILWithDefaults() *BRANDSDETAIL {
	this := BRANDSDETAIL{}
	return &this
}

// GetBrandId returns the BrandId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetBrandId() int64 {
	if o == nil || IsNil(o.BrandId.Get()) {
		var ret int64
		return ret
	}
	return *o.BrandId.Get()
}

// GetBrandIdOk returns a tuple with the BrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetBrandIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandId.Get(), o.BrandId.IsSet()
}

// HasBrandId returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasBrandId() bool {
	if o != nil && o.BrandId.IsSet() {
		return true
	}

	return false
}

// SetBrandId gets a reference to the given NullableInt64 and assigns it to the BrandId field.
func (o *BRANDSDETAIL) SetBrandId(v int64) {
	o.BrandId.Set(&v)
}
// SetBrandIdNil sets the value for BrandId to be an explicit nil
func (o *BRANDSDETAIL) SetBrandIdNil() {
	o.BrandId.Set(nil)
}

// UnsetBrandId ensures that no value is present for BrandId, not even an explicit nil
func (o *BRANDSDETAIL) UnsetBrandId() {
	o.BrandId.Unset()
}

// GetBrandNm returns the BrandNm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetBrandNm() string {
	if o == nil || IsNil(o.BrandNm.Get()) {
		var ret string
		return ret
	}
	return *o.BrandNm.Get()
}

// GetBrandNmOk returns a tuple with the BrandNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetBrandNmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandNm.Get(), o.BrandNm.IsSet()
}

// HasBrandNm returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasBrandNm() bool {
	if o != nil && o.BrandNm.IsSet() {
		return true
	}

	return false
}

// SetBrandNm gets a reference to the given NullableString and assigns it to the BrandNm field.
func (o *BRANDSDETAIL) SetBrandNm(v string) {
	o.BrandNm.Set(&v)
}
// SetBrandNmNil sets the value for BrandNm to be an explicit nil
func (o *BRANDSDETAIL) SetBrandNmNil() {
	o.BrandNm.Set(nil)
}

// UnsetBrandNm ensures that no value is present for BrandNm, not even an explicit nil
func (o *BRANDSDETAIL) UnsetBrandNm() {
	o.BrandNm.Unset()
}

// GetBrandLogo returns the BrandLogo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetBrandLogo() string {
	if o == nil || IsNil(o.BrandLogo.Get()) {
		var ret string
		return ret
	}
	return *o.BrandLogo.Get()
}

// GetBrandLogoOk returns a tuple with the BrandLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetBrandLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandLogo.Get(), o.BrandLogo.IsSet()
}

// HasBrandLogo returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasBrandLogo() bool {
	if o != nil && o.BrandLogo.IsSet() {
		return true
	}

	return false
}

// SetBrandLogo gets a reference to the given NullableString and assigns it to the BrandLogo field.
func (o *BRANDSDETAIL) SetBrandLogo(v string) {
	o.BrandLogo.Set(&v)
}
// SetBrandLogoNil sets the value for BrandLogo to be an explicit nil
func (o *BRANDSDETAIL) SetBrandLogoNil() {
	o.BrandLogo.Set(nil)
}

// UnsetBrandLogo ensures that no value is present for BrandLogo, not even an explicit nil
func (o *BRANDSDETAIL) UnsetBrandLogo() {
	o.BrandLogo.Unset()
}

// GetSlug returns the Slug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetSlug() string {
	if o == nil || IsNil(o.Slug.Get()) {
		var ret string
		return ret
	}
	return *o.Slug.Get()
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Slug.Get(), o.Slug.IsSet()
}

// HasSlug returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasSlug() bool {
	if o != nil && o.Slug.IsSet() {
		return true
	}

	return false
}

// SetSlug gets a reference to the given NullableString and assigns it to the Slug field.
func (o *BRANDSDETAIL) SetSlug(v string) {
	o.Slug.Set(&v)
}
// SetSlugNil sets the value for Slug to be an explicit nil
func (o *BRANDSDETAIL) SetSlugNil() {
	o.Slug.Set(nil)
}

// UnsetSlug ensures that no value is present for Slug, not even an explicit nil
func (o *BRANDSDETAIL) UnsetSlug() {
	o.Slug.Unset()
}

// GetShortDesc returns the ShortDesc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetShortDesc() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ShortDesc
}

// GetShortDescOk returns a tuple with the ShortDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetShortDescOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ShortDesc) {
		return nil, false
	}
	return &o.ShortDesc, true
}

// HasShortDesc returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasShortDesc() bool {
	if o != nil && !IsNil(o.ShortDesc) {
		return true
	}

	return false
}

// SetShortDesc gets a reference to the given interface{} and assigns it to the ShortDesc field.
func (o *BRANDSDETAIL) SetShortDesc(v interface{}) {
	o.ShortDesc = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BRANDSDETAIL) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BRANDSDETAIL) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BRANDSDETAIL) UnsetDescription() {
	o.Description.Unset()
}

// GetCategoryID returns the CategoryID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetCategoryID() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.CategoryID
}

// GetCategoryIDOk returns a tuple with the CategoryID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetCategoryIDOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.CategoryID) {
		return nil, false
	}
	return o.CategoryID, true
}

// HasCategoryID returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasCategoryID() bool {
	if o != nil && !IsNil(o.CategoryID) {
		return true
	}

	return false
}

// SetCategoryID gets a reference to the given []interface{} and assigns it to the CategoryID field.
func (o *BRANDSDETAIL) SetCategoryID(v []interface{}) {
	o.CategoryID = v
}

// GetOrder returns the Order field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetOrder() int64 {
	if o == nil || IsNil(o.Order.Get()) {
		var ret int64
		return ret
	}
	return *o.Order.Get()
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetOrderOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Order.Get(), o.Order.IsSet()
}

// HasOrder returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasOrder() bool {
	if o != nil && o.Order.IsSet() {
		return true
	}

	return false
}

// SetOrder gets a reference to the given NullableInt64 and assigns it to the Order field.
func (o *BRANDSDETAIL) SetOrder(v int64) {
	o.Order.Set(&v)
}
// SetOrderNil sets the value for Order to be an explicit nil
func (o *BRANDSDETAIL) SetOrderNil() {
	o.Order.Set(nil)
}

// UnsetOrder ensures that no value is present for Order, not even an explicit nil
func (o *BRANDSDETAIL) UnsetOrder() {
	o.Order.Unset()
}

// GetServiceGuide returns the ServiceGuide field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BRANDSDETAIL) GetServiceGuide() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ServiceGuide
}

// GetServiceGuideOk returns a tuple with the ServiceGuide field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BRANDSDETAIL) GetServiceGuideOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ServiceGuide) {
		return nil, false
	}
	return &o.ServiceGuide, true
}

// HasServiceGuide returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasServiceGuide() bool {
	if o != nil && !IsNil(o.ServiceGuide) {
		return true
	}

	return false
}

// SetServiceGuide gets a reference to the given interface{} and assigns it to the ServiceGuide field.
func (o *BRANDSDETAIL) SetServiceGuide(v interface{}) {
	o.ServiceGuide = v
}

// GetStores returns the Stores field value if set, zero value otherwise.
func (o *BRANDSDETAIL) GetStores() []STORESSCHEMA {
	if o == nil || IsNil(o.Stores) {
		var ret []STORESSCHEMA
		return ret
	}
	return o.Stores
}

// GetStoresOk returns a tuple with the Stores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BRANDSDETAIL) GetStoresOk() ([]STORESSCHEMA, bool) {
	if o == nil || IsNil(o.Stores) {
		return nil, false
	}
	return o.Stores, true
}

// HasStores returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasStores() bool {
	if o != nil && !IsNil(o.Stores) {
		return true
	}

	return false
}

// SetStores gets a reference to the given []STORESSCHEMA and assigns it to the Stores field.
func (o *BRANDSDETAIL) SetStores(v []STORESSCHEMA) {
	o.Stores = v
}

// GetUsageMethods returns the UsageMethods field value if set, zero value otherwise.
func (o *BRANDSDETAIL) GetUsageMethods() []USAGEMETHODSCHEMA {
	if o == nil || IsNil(o.UsageMethods) {
		var ret []USAGEMETHODSCHEMA
		return ret
	}
	return o.UsageMethods
}

// GetUsageMethodsOk returns a tuple with the UsageMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BRANDSDETAIL) GetUsageMethodsOk() ([]USAGEMETHODSCHEMA, bool) {
	if o == nil || IsNil(o.UsageMethods) {
		return nil, false
	}
	return o.UsageMethods, true
}

// HasUsageMethods returns a boolean if a field has been set.
func (o *BRANDSDETAIL) HasUsageMethods() bool {
	if o != nil && !IsNil(o.UsageMethods) {
		return true
	}

	return false
}

// SetUsageMethods gets a reference to the given []USAGEMETHODSCHEMA and assigns it to the UsageMethods field.
func (o *BRANDSDETAIL) SetUsageMethods(v []USAGEMETHODSCHEMA) {
	o.UsageMethods = v
}

func (o BRANDSDETAIL) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BRANDSDETAIL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BrandId.IsSet() {
		toSerialize["brandId"] = o.BrandId.Get()
	}
	if o.BrandNm.IsSet() {
		toSerialize["brandNm"] = o.BrandNm.Get()
	}
	if o.BrandLogo.IsSet() {
		toSerialize["brandLogo"] = o.BrandLogo.Get()
	}
	if o.Slug.IsSet() {
		toSerialize["slug"] = o.Slug.Get()
	}
	if o.ShortDesc != nil {
		toSerialize["shortDesc"] = o.ShortDesc
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.CategoryID != nil {
		toSerialize["categoryID"] = o.CategoryID
	}
	if o.Order.IsSet() {
		toSerialize["order"] = o.Order.Get()
	}
	if o.ServiceGuide != nil {
		toSerialize["serviceGuide"] = o.ServiceGuide
	}
	if !IsNil(o.Stores) {
		toSerialize["stores"] = o.Stores
	}
	if !IsNil(o.UsageMethods) {
		toSerialize["usageMethods"] = o.UsageMethods
	}
	return toSerialize, nil
}

type NullableBRANDSDETAIL struct {
	value *BRANDSDETAIL
	isSet bool
}

func (v NullableBRANDSDETAIL) Get() *BRANDSDETAIL {
	return v.value
}

func (v *NullableBRANDSDETAIL) Set(val *BRANDSDETAIL) {
	v.value = val
	v.isSet = true
}

func (v NullableBRANDSDETAIL) IsSet() bool {
	return v.isSet
}

func (v *NullableBRANDSDETAIL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBRANDSDETAIL(val *BRANDSDETAIL) *NullableBRANDSDETAIL {
	return &NullableBRANDSDETAIL{value: val, isSet: true}
}

func (v NullableBRANDSDETAIL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBRANDSDETAIL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


