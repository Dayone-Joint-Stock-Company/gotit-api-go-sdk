/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the PRODUCTSRESPONSEDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PRODUCTSRESPONSEDataInner{}

// PRODUCTSRESPONSEDataInner struct for PRODUCTSRESPONSEDataInner
type PRODUCTSRESPONSEDataInner struct {
	ProductList []PRODUCTSALLDETAIL `json:"productList,omitempty"`
	Pagination *PAGINGSCHEMA `json:"pagination,omitempty"`
}

// NewPRODUCTSRESPONSEDataInner instantiates a new PRODUCTSRESPONSEDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPRODUCTSRESPONSEDataInner() *PRODUCTSRESPONSEDataInner {
	this := PRODUCTSRESPONSEDataInner{}
	return &this
}

// NewPRODUCTSRESPONSEDataInnerWithDefaults instantiates a new PRODUCTSRESPONSEDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPRODUCTSRESPONSEDataInnerWithDefaults() *PRODUCTSRESPONSEDataInner {
	this := PRODUCTSRESPONSEDataInner{}
	return &this
}

// GetProductList returns the ProductList field value if set, zero value otherwise.
func (o *PRODUCTSRESPONSEDataInner) GetProductList() []PRODUCTSALLDETAIL {
	if o == nil || IsNil(o.ProductList) {
		var ret []PRODUCTSALLDETAIL
		return ret
	}
	return o.ProductList
}

// GetProductListOk returns a tuple with the ProductList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTSRESPONSEDataInner) GetProductListOk() ([]PRODUCTSALLDETAIL, bool) {
	if o == nil || IsNil(o.ProductList) {
		return nil, false
	}
	return o.ProductList, true
}

// HasProductList returns a boolean if a field has been set.
func (o *PRODUCTSRESPONSEDataInner) HasProductList() bool {
	if o != nil && !IsNil(o.ProductList) {
		return true
	}

	return false
}

// SetProductList gets a reference to the given []PRODUCTSALLDETAIL and assigns it to the ProductList field.
func (o *PRODUCTSRESPONSEDataInner) SetProductList(v []PRODUCTSALLDETAIL) {
	o.ProductList = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *PRODUCTSRESPONSEDataInner) GetPagination() PAGINGSCHEMA {
	if o == nil || IsNil(o.Pagination) {
		var ret PAGINGSCHEMA
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTSRESPONSEDataInner) GetPaginationOk() (*PAGINGSCHEMA, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *PRODUCTSRESPONSEDataInner) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PAGINGSCHEMA and assigns it to the Pagination field.
func (o *PRODUCTSRESPONSEDataInner) SetPagination(v PAGINGSCHEMA) {
	o.Pagination = &v
}

func (o PRODUCTSRESPONSEDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PRODUCTSRESPONSEDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductList) {
		toSerialize["productList"] = o.ProductList
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullablePRODUCTSRESPONSEDataInner struct {
	value *PRODUCTSRESPONSEDataInner
	isSet bool
}

func (v NullablePRODUCTSRESPONSEDataInner) Get() *PRODUCTSRESPONSEDataInner {
	return v.value
}

func (v *NullablePRODUCTSRESPONSEDataInner) Set(val *PRODUCTSRESPONSEDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePRODUCTSRESPONSEDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePRODUCTSRESPONSEDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePRODUCTSRESPONSEDataInner(val *PRODUCTSRESPONSEDataInner) *NullablePRODUCTSRESPONSEDataInner {
	return &NullablePRODUCTSRESPONSEDataInner{value: val, isSet: true}
}

func (v NullablePRODUCTSRESPONSEDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePRODUCTSRESPONSEDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


