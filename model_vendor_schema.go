/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the VENDORSCHEMA type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VENDORSCHEMA{}

// VENDORSCHEMA struct for VENDORSCHEMA
type VENDORSCHEMA struct {
	Expiry NullableString `json:"expiry,omitempty"`
	Vendor NullableString `json:"vendor,omitempty"`
}

// NewVENDORSCHEMA instantiates a new VENDORSCHEMA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVENDORSCHEMA() *VENDORSCHEMA {
	this := VENDORSCHEMA{}
	return &this
}

// NewVENDORSCHEMAWithDefaults instantiates a new VENDORSCHEMA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVENDORSCHEMAWithDefaults() *VENDORSCHEMA {
	this := VENDORSCHEMA{}
	return &this
}

// GetExpiry returns the Expiry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VENDORSCHEMA) GetExpiry() string {
	if o == nil || IsNil(o.Expiry.Get()) {
		var ret string
		return ret
	}
	return *o.Expiry.Get()
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VENDORSCHEMA) GetExpiryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Expiry.Get(), o.Expiry.IsSet()
}

// HasExpiry returns a boolean if a field has been set.
func (o *VENDORSCHEMA) HasExpiry() bool {
	if o != nil && o.Expiry.IsSet() {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given NullableString and assigns it to the Expiry field.
func (o *VENDORSCHEMA) SetExpiry(v string) {
	o.Expiry.Set(&v)
}
// SetExpiryNil sets the value for Expiry to be an explicit nil
func (o *VENDORSCHEMA) SetExpiryNil() {
	o.Expiry.Set(nil)
}

// UnsetExpiry ensures that no value is present for Expiry, not even an explicit nil
func (o *VENDORSCHEMA) UnsetExpiry() {
	o.Expiry.Unset()
}

// GetVendor returns the Vendor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VENDORSCHEMA) GetVendor() string {
	if o == nil || IsNil(o.Vendor.Get()) {
		var ret string
		return ret
	}
	return *o.Vendor.Get()
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VENDORSCHEMA) GetVendorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vendor.Get(), o.Vendor.IsSet()
}

// HasVendor returns a boolean if a field has been set.
func (o *VENDORSCHEMA) HasVendor() bool {
	if o != nil && o.Vendor.IsSet() {
		return true
	}

	return false
}

// SetVendor gets a reference to the given NullableString and assigns it to the Vendor field.
func (o *VENDORSCHEMA) SetVendor(v string) {
	o.Vendor.Set(&v)
}
// SetVendorNil sets the value for Vendor to be an explicit nil
func (o *VENDORSCHEMA) SetVendorNil() {
	o.Vendor.Set(nil)
}

// UnsetVendor ensures that no value is present for Vendor, not even an explicit nil
func (o *VENDORSCHEMA) UnsetVendor() {
	o.Vendor.Unset()
}

func (o VENDORSCHEMA) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VENDORSCHEMA) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Expiry.IsSet() {
		toSerialize["expiry"] = o.Expiry.Get()
	}
	if o.Vendor.IsSet() {
		toSerialize["vendor"] = o.Vendor.Get()
	}
	return toSerialize, nil
}

type NullableVENDORSCHEMA struct {
	value *VENDORSCHEMA
	isSet bool
}

func (v NullableVENDORSCHEMA) Get() *VENDORSCHEMA {
	return v.value
}

func (v *NullableVENDORSCHEMA) Set(val *VENDORSCHEMA) {
	v.value = val
	v.isSet = true
}

func (v NullableVENDORSCHEMA) IsSet() bool {
	return v.isSet
}

func (v *NullableVENDORSCHEMA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVENDORSCHEMA(val *VENDORSCHEMA) *NullableVENDORSCHEMA {
	return &NullableVENDORSCHEMA{value: val, isSet: true}
}

func (v NullableVENDORSCHEMA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVENDORSCHEMA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


