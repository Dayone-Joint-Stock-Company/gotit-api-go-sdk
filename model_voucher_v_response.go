/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the VOUCHERVRESPONSE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VOUCHERVRESPONSE{}

// VOUCHERVRESPONSE struct for VOUCHERVRESPONSE
type VOUCHERVRESPONSE struct {
	// HTTP response status
	Status *string `json:"status,omitempty"`
	// HTTP response status codes
	StatusCode *int64 `json:"statusCode,omitempty"`
	// Error code
	Error *string `json:"error,omitempty"`
	// Message Error
	Message *string `json:"message,omitempty"`
	Data []VOUCHERV `json:"data,omitempty"`
}

// NewVOUCHERVRESPONSE instantiates a new VOUCHERVRESPONSE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVOUCHERVRESPONSE() *VOUCHERVRESPONSE {
	this := VOUCHERVRESPONSE{}
	return &this
}

// NewVOUCHERVRESPONSEWithDefaults instantiates a new VOUCHERVRESPONSE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVOUCHERVRESPONSEWithDefaults() *VOUCHERVRESPONSE {
	this := VOUCHERVRESPONSE{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VOUCHERVRESPONSE) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VOUCHERVRESPONSE) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VOUCHERVRESPONSE) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VOUCHERVRESPONSE) SetStatus(v string) {
	o.Status = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *VOUCHERVRESPONSE) GetStatusCode() int64 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int64
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VOUCHERVRESPONSE) GetStatusCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *VOUCHERVRESPONSE) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int64 and assigns it to the StatusCode field.
func (o *VOUCHERVRESPONSE) SetStatusCode(v int64) {
	o.StatusCode = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *VOUCHERVRESPONSE) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VOUCHERVRESPONSE) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *VOUCHERVRESPONSE) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *VOUCHERVRESPONSE) SetError(v string) {
	o.Error = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *VOUCHERVRESPONSE) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VOUCHERVRESPONSE) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *VOUCHERVRESPONSE) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *VOUCHERVRESPONSE) SetMessage(v string) {
	o.Message = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *VOUCHERVRESPONSE) GetData() []VOUCHERV {
	if o == nil || IsNil(o.Data) {
		var ret []VOUCHERV
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VOUCHERVRESPONSE) GetDataOk() ([]VOUCHERV, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *VOUCHERVRESPONSE) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []VOUCHERV and assigns it to the Data field.
func (o *VOUCHERVRESPONSE) SetData(v []VOUCHERV) {
	o.Data = v
}

func (o VOUCHERVRESPONSE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VOUCHERVRESPONSE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableVOUCHERVRESPONSE struct {
	value *VOUCHERVRESPONSE
	isSet bool
}

func (v NullableVOUCHERVRESPONSE) Get() *VOUCHERVRESPONSE {
	return v.value
}

func (v *NullableVOUCHERVRESPONSE) Set(val *VOUCHERVRESPONSE) {
	v.value = val
	v.isSet = true
}

func (v NullableVOUCHERVRESPONSE) IsSet() bool {
	return v.isSet
}

func (v *NullableVOUCHERVRESPONSE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVOUCHERVRESPONSE(val *VOUCHERVRESPONSE) *NullableVOUCHERVRESPONSE {
	return &NullableVOUCHERVRESPONSE{value: val, isSet: true}
}

func (v NullableVOUCHERVRESPONSE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVOUCHERVRESPONSE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


