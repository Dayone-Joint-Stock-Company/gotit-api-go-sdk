/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the PRODUCTSDETAIL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PRODUCTSDETAIL{}

// PRODUCTSDETAIL struct for PRODUCTSDETAIL
type PRODUCTSDETAIL struct {
	// Product Id
	ProductId NullableInt64 `json:"productId,omitempty"`
	// Product Name
	ProductNm NullableString `json:"productNm,omitempty"`
	// Link product image
	ProductImg NullableString `json:"productImg,omitempty"`
	// Product Description
	ProductDesc NullableString `json:"productDesc,omitempty"`
	// Product Short Description
	ProductShortDesc NullableString `json:"productShortDesc,omitempty"`
	// Terms of use
	Terms NullableString `json:"terms,omitempty"`
	// Brand id
	BrandId NullableInt64 `json:"brandId,omitempty"`
	// Brand name
	BrandNm NullableString `json:"brandNm,omitempty"`
	// Link to brand logo image
	BrandLogo NullableString `json:"brandLogo,omitempty"`
	// T&C of brand
	BrandServiceGuide NullableString `json:"brandServiceGuide,omitempty"`
	// Category Id
	CategoryId NullableInt64 `json:"categoryId,omitempty"`
	// Category Name
	CategoryNm NullableString `json:"categoryNm,omitempty"`
	// Category Image
	CategoryImg NullableString `json:"categoryImg,omitempty"`
	// c (cash) hoáº·c i (item)
	ProductType NullableString `json:"productType,omitempty"`
	Prices []PRODUCTPRICESCHEMA `json:"prices,omitempty"`
	Link NullableString `json:"link,omitempty"`
	StoreList []STORESSCHEMA `json:"storeList,omitempty"`
}

// NewPRODUCTSDETAIL instantiates a new PRODUCTSDETAIL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPRODUCTSDETAIL() *PRODUCTSDETAIL {
	this := PRODUCTSDETAIL{}
	return &this
}

// NewPRODUCTSDETAILWithDefaults instantiates a new PRODUCTSDETAIL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPRODUCTSDETAILWithDefaults() *PRODUCTSDETAIL {
	this := PRODUCTSDETAIL{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId.Get()) {
		var ret int64
		return ret
	}
	return *o.ProductId.Get()
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetProductIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId.Get(), o.ProductId.IsSet()
}

// HasProductId returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasProductId() bool {
	if o != nil && o.ProductId.IsSet() {
		return true
	}

	return false
}

// SetProductId gets a reference to the given NullableInt64 and assigns it to the ProductId field.
func (o *PRODUCTSDETAIL) SetProductId(v int64) {
	o.ProductId.Set(&v)
}
// SetProductIdNil sets the value for ProductId to be an explicit nil
func (o *PRODUCTSDETAIL) SetProductIdNil() {
	o.ProductId.Set(nil)
}

// UnsetProductId ensures that no value is present for ProductId, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetProductId() {
	o.ProductId.Unset()
}

// GetProductNm returns the ProductNm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetProductNm() string {
	if o == nil || IsNil(o.ProductNm.Get()) {
		var ret string
		return ret
	}
	return *o.ProductNm.Get()
}

// GetProductNmOk returns a tuple with the ProductNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetProductNmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductNm.Get(), o.ProductNm.IsSet()
}

// HasProductNm returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasProductNm() bool {
	if o != nil && o.ProductNm.IsSet() {
		return true
	}

	return false
}

// SetProductNm gets a reference to the given NullableString and assigns it to the ProductNm field.
func (o *PRODUCTSDETAIL) SetProductNm(v string) {
	o.ProductNm.Set(&v)
}
// SetProductNmNil sets the value for ProductNm to be an explicit nil
func (o *PRODUCTSDETAIL) SetProductNmNil() {
	o.ProductNm.Set(nil)
}

// UnsetProductNm ensures that no value is present for ProductNm, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetProductNm() {
	o.ProductNm.Unset()
}

// GetProductImg returns the ProductImg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetProductImg() string {
	if o == nil || IsNil(o.ProductImg.Get()) {
		var ret string
		return ret
	}
	return *o.ProductImg.Get()
}

// GetProductImgOk returns a tuple with the ProductImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetProductImgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductImg.Get(), o.ProductImg.IsSet()
}

// HasProductImg returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasProductImg() bool {
	if o != nil && o.ProductImg.IsSet() {
		return true
	}

	return false
}

// SetProductImg gets a reference to the given NullableString and assigns it to the ProductImg field.
func (o *PRODUCTSDETAIL) SetProductImg(v string) {
	o.ProductImg.Set(&v)
}
// SetProductImgNil sets the value for ProductImg to be an explicit nil
func (o *PRODUCTSDETAIL) SetProductImgNil() {
	o.ProductImg.Set(nil)
}

// UnsetProductImg ensures that no value is present for ProductImg, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetProductImg() {
	o.ProductImg.Unset()
}

// GetProductDesc returns the ProductDesc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetProductDesc() string {
	if o == nil || IsNil(o.ProductDesc.Get()) {
		var ret string
		return ret
	}
	return *o.ProductDesc.Get()
}

// GetProductDescOk returns a tuple with the ProductDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetProductDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductDesc.Get(), o.ProductDesc.IsSet()
}

// HasProductDesc returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasProductDesc() bool {
	if o != nil && o.ProductDesc.IsSet() {
		return true
	}

	return false
}

// SetProductDesc gets a reference to the given NullableString and assigns it to the ProductDesc field.
func (o *PRODUCTSDETAIL) SetProductDesc(v string) {
	o.ProductDesc.Set(&v)
}
// SetProductDescNil sets the value for ProductDesc to be an explicit nil
func (o *PRODUCTSDETAIL) SetProductDescNil() {
	o.ProductDesc.Set(nil)
}

// UnsetProductDesc ensures that no value is present for ProductDesc, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetProductDesc() {
	o.ProductDesc.Unset()
}

// GetProductShortDesc returns the ProductShortDesc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetProductShortDesc() string {
	if o == nil || IsNil(o.ProductShortDesc.Get()) {
		var ret string
		return ret
	}
	return *o.ProductShortDesc.Get()
}

// GetProductShortDescOk returns a tuple with the ProductShortDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetProductShortDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductShortDesc.Get(), o.ProductShortDesc.IsSet()
}

// HasProductShortDesc returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasProductShortDesc() bool {
	if o != nil && o.ProductShortDesc.IsSet() {
		return true
	}

	return false
}

// SetProductShortDesc gets a reference to the given NullableString and assigns it to the ProductShortDesc field.
func (o *PRODUCTSDETAIL) SetProductShortDesc(v string) {
	o.ProductShortDesc.Set(&v)
}
// SetProductShortDescNil sets the value for ProductShortDesc to be an explicit nil
func (o *PRODUCTSDETAIL) SetProductShortDescNil() {
	o.ProductShortDesc.Set(nil)
}

// UnsetProductShortDesc ensures that no value is present for ProductShortDesc, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetProductShortDesc() {
	o.ProductShortDesc.Unset()
}

// GetTerms returns the Terms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetTerms() string {
	if o == nil || IsNil(o.Terms.Get()) {
		var ret string
		return ret
	}
	return *o.Terms.Get()
}

// GetTermsOk returns a tuple with the Terms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetTermsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Terms.Get(), o.Terms.IsSet()
}

// HasTerms returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasTerms() bool {
	if o != nil && o.Terms.IsSet() {
		return true
	}

	return false
}

// SetTerms gets a reference to the given NullableString and assigns it to the Terms field.
func (o *PRODUCTSDETAIL) SetTerms(v string) {
	o.Terms.Set(&v)
}
// SetTermsNil sets the value for Terms to be an explicit nil
func (o *PRODUCTSDETAIL) SetTermsNil() {
	o.Terms.Set(nil)
}

// UnsetTerms ensures that no value is present for Terms, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetTerms() {
	o.Terms.Unset()
}

// GetBrandId returns the BrandId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetBrandId() int64 {
	if o == nil || IsNil(o.BrandId.Get()) {
		var ret int64
		return ret
	}
	return *o.BrandId.Get()
}

// GetBrandIdOk returns a tuple with the BrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetBrandIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandId.Get(), o.BrandId.IsSet()
}

// HasBrandId returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasBrandId() bool {
	if o != nil && o.BrandId.IsSet() {
		return true
	}

	return false
}

// SetBrandId gets a reference to the given NullableInt64 and assigns it to the BrandId field.
func (o *PRODUCTSDETAIL) SetBrandId(v int64) {
	o.BrandId.Set(&v)
}
// SetBrandIdNil sets the value for BrandId to be an explicit nil
func (o *PRODUCTSDETAIL) SetBrandIdNil() {
	o.BrandId.Set(nil)
}

// UnsetBrandId ensures that no value is present for BrandId, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetBrandId() {
	o.BrandId.Unset()
}

// GetBrandNm returns the BrandNm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetBrandNm() string {
	if o == nil || IsNil(o.BrandNm.Get()) {
		var ret string
		return ret
	}
	return *o.BrandNm.Get()
}

// GetBrandNmOk returns a tuple with the BrandNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetBrandNmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandNm.Get(), o.BrandNm.IsSet()
}

// HasBrandNm returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasBrandNm() bool {
	if o != nil && o.BrandNm.IsSet() {
		return true
	}

	return false
}

// SetBrandNm gets a reference to the given NullableString and assigns it to the BrandNm field.
func (o *PRODUCTSDETAIL) SetBrandNm(v string) {
	o.BrandNm.Set(&v)
}
// SetBrandNmNil sets the value for BrandNm to be an explicit nil
func (o *PRODUCTSDETAIL) SetBrandNmNil() {
	o.BrandNm.Set(nil)
}

// UnsetBrandNm ensures that no value is present for BrandNm, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetBrandNm() {
	o.BrandNm.Unset()
}

// GetBrandLogo returns the BrandLogo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetBrandLogo() string {
	if o == nil || IsNil(o.BrandLogo.Get()) {
		var ret string
		return ret
	}
	return *o.BrandLogo.Get()
}

// GetBrandLogoOk returns a tuple with the BrandLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetBrandLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandLogo.Get(), o.BrandLogo.IsSet()
}

// HasBrandLogo returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasBrandLogo() bool {
	if o != nil && o.BrandLogo.IsSet() {
		return true
	}

	return false
}

// SetBrandLogo gets a reference to the given NullableString and assigns it to the BrandLogo field.
func (o *PRODUCTSDETAIL) SetBrandLogo(v string) {
	o.BrandLogo.Set(&v)
}
// SetBrandLogoNil sets the value for BrandLogo to be an explicit nil
func (o *PRODUCTSDETAIL) SetBrandLogoNil() {
	o.BrandLogo.Set(nil)
}

// UnsetBrandLogo ensures that no value is present for BrandLogo, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetBrandLogo() {
	o.BrandLogo.Unset()
}

// GetBrandServiceGuide returns the BrandServiceGuide field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetBrandServiceGuide() string {
	if o == nil || IsNil(o.BrandServiceGuide.Get()) {
		var ret string
		return ret
	}
	return *o.BrandServiceGuide.Get()
}

// GetBrandServiceGuideOk returns a tuple with the BrandServiceGuide field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetBrandServiceGuideOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrandServiceGuide.Get(), o.BrandServiceGuide.IsSet()
}

// HasBrandServiceGuide returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasBrandServiceGuide() bool {
	if o != nil && o.BrandServiceGuide.IsSet() {
		return true
	}

	return false
}

// SetBrandServiceGuide gets a reference to the given NullableString and assigns it to the BrandServiceGuide field.
func (o *PRODUCTSDETAIL) SetBrandServiceGuide(v string) {
	o.BrandServiceGuide.Set(&v)
}
// SetBrandServiceGuideNil sets the value for BrandServiceGuide to be an explicit nil
func (o *PRODUCTSDETAIL) SetBrandServiceGuideNil() {
	o.BrandServiceGuide.Set(nil)
}

// UnsetBrandServiceGuide ensures that no value is present for BrandServiceGuide, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetBrandServiceGuide() {
	o.BrandServiceGuide.Unset()
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetCategoryId() int64 {
	if o == nil || IsNil(o.CategoryId.Get()) {
		var ret int64
		return ret
	}
	return *o.CategoryId.Get()
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetCategoryIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryId.Get(), o.CategoryId.IsSet()
}

// HasCategoryId returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasCategoryId() bool {
	if o != nil && o.CategoryId.IsSet() {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given NullableInt64 and assigns it to the CategoryId field.
func (o *PRODUCTSDETAIL) SetCategoryId(v int64) {
	o.CategoryId.Set(&v)
}
// SetCategoryIdNil sets the value for CategoryId to be an explicit nil
func (o *PRODUCTSDETAIL) SetCategoryIdNil() {
	o.CategoryId.Set(nil)
}

// UnsetCategoryId ensures that no value is present for CategoryId, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetCategoryId() {
	o.CategoryId.Unset()
}

// GetCategoryNm returns the CategoryNm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetCategoryNm() string {
	if o == nil || IsNil(o.CategoryNm.Get()) {
		var ret string
		return ret
	}
	return *o.CategoryNm.Get()
}

// GetCategoryNmOk returns a tuple with the CategoryNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetCategoryNmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryNm.Get(), o.CategoryNm.IsSet()
}

// HasCategoryNm returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasCategoryNm() bool {
	if o != nil && o.CategoryNm.IsSet() {
		return true
	}

	return false
}

// SetCategoryNm gets a reference to the given NullableString and assigns it to the CategoryNm field.
func (o *PRODUCTSDETAIL) SetCategoryNm(v string) {
	o.CategoryNm.Set(&v)
}
// SetCategoryNmNil sets the value for CategoryNm to be an explicit nil
func (o *PRODUCTSDETAIL) SetCategoryNmNil() {
	o.CategoryNm.Set(nil)
}

// UnsetCategoryNm ensures that no value is present for CategoryNm, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetCategoryNm() {
	o.CategoryNm.Unset()
}

// GetCategoryImg returns the CategoryImg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetCategoryImg() string {
	if o == nil || IsNil(o.CategoryImg.Get()) {
		var ret string
		return ret
	}
	return *o.CategoryImg.Get()
}

// GetCategoryImgOk returns a tuple with the CategoryImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetCategoryImgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryImg.Get(), o.CategoryImg.IsSet()
}

// HasCategoryImg returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasCategoryImg() bool {
	if o != nil && o.CategoryImg.IsSet() {
		return true
	}

	return false
}

// SetCategoryImg gets a reference to the given NullableString and assigns it to the CategoryImg field.
func (o *PRODUCTSDETAIL) SetCategoryImg(v string) {
	o.CategoryImg.Set(&v)
}
// SetCategoryImgNil sets the value for CategoryImg to be an explicit nil
func (o *PRODUCTSDETAIL) SetCategoryImgNil() {
	o.CategoryImg.Set(nil)
}

// UnsetCategoryImg ensures that no value is present for CategoryImg, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetCategoryImg() {
	o.CategoryImg.Unset()
}

// GetProductType returns the ProductType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetProductType() string {
	if o == nil || IsNil(o.ProductType.Get()) {
		var ret string
		return ret
	}
	return *o.ProductType.Get()
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetProductTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductType.Get(), o.ProductType.IsSet()
}

// HasProductType returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasProductType() bool {
	if o != nil && o.ProductType.IsSet() {
		return true
	}

	return false
}

// SetProductType gets a reference to the given NullableString and assigns it to the ProductType field.
func (o *PRODUCTSDETAIL) SetProductType(v string) {
	o.ProductType.Set(&v)
}
// SetProductTypeNil sets the value for ProductType to be an explicit nil
func (o *PRODUCTSDETAIL) SetProductTypeNil() {
	o.ProductType.Set(nil)
}

// UnsetProductType ensures that no value is present for ProductType, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetProductType() {
	o.ProductType.Unset()
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *PRODUCTSDETAIL) GetPrices() []PRODUCTPRICESCHEMA {
	if o == nil || IsNil(o.Prices) {
		var ret []PRODUCTPRICESCHEMA
		return ret
	}
	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTSDETAIL) GetPricesOk() ([]PRODUCTPRICESCHEMA, bool) {
	if o == nil || IsNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given []PRODUCTPRICESCHEMA and assigns it to the Prices field.
func (o *PRODUCTSDETAIL) SetPrices(v []PRODUCTPRICESCHEMA) {
	o.Prices = v
}

// GetLink returns the Link field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTSDETAIL) GetLink() string {
	if o == nil || IsNil(o.Link.Get()) {
		var ret string
		return ret
	}
	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTSDETAIL) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// HasLink returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasLink() bool {
	if o != nil && o.Link.IsSet() {
		return true
	}

	return false
}

// SetLink gets a reference to the given NullableString and assigns it to the Link field.
func (o *PRODUCTSDETAIL) SetLink(v string) {
	o.Link.Set(&v)
}
// SetLinkNil sets the value for Link to be an explicit nil
func (o *PRODUCTSDETAIL) SetLinkNil() {
	o.Link.Set(nil)
}

// UnsetLink ensures that no value is present for Link, not even an explicit nil
func (o *PRODUCTSDETAIL) UnsetLink() {
	o.Link.Unset()
}

// GetStoreList returns the StoreList field value if set, zero value otherwise.
func (o *PRODUCTSDETAIL) GetStoreList() []STORESSCHEMA {
	if o == nil || IsNil(o.StoreList) {
		var ret []STORESSCHEMA
		return ret
	}
	return o.StoreList
}

// GetStoreListOk returns a tuple with the StoreList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PRODUCTSDETAIL) GetStoreListOk() ([]STORESSCHEMA, bool) {
	if o == nil || IsNil(o.StoreList) {
		return nil, false
	}
	return o.StoreList, true
}

// HasStoreList returns a boolean if a field has been set.
func (o *PRODUCTSDETAIL) HasStoreList() bool {
	if o != nil && !IsNil(o.StoreList) {
		return true
	}

	return false
}

// SetStoreList gets a reference to the given []STORESSCHEMA and assigns it to the StoreList field.
func (o *PRODUCTSDETAIL) SetStoreList(v []STORESSCHEMA) {
	o.StoreList = v
}

func (o PRODUCTSDETAIL) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PRODUCTSDETAIL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductId.IsSet() {
		toSerialize["productId"] = o.ProductId.Get()
	}
	if o.ProductNm.IsSet() {
		toSerialize["productNm"] = o.ProductNm.Get()
	}
	if o.ProductImg.IsSet() {
		toSerialize["productImg"] = o.ProductImg.Get()
	}
	if o.ProductDesc.IsSet() {
		toSerialize["productDesc"] = o.ProductDesc.Get()
	}
	if o.ProductShortDesc.IsSet() {
		toSerialize["productShortDesc"] = o.ProductShortDesc.Get()
	}
	if o.Terms.IsSet() {
		toSerialize["terms"] = o.Terms.Get()
	}
	if o.BrandId.IsSet() {
		toSerialize["brandId"] = o.BrandId.Get()
	}
	if o.BrandNm.IsSet() {
		toSerialize["brandNm"] = o.BrandNm.Get()
	}
	if o.BrandLogo.IsSet() {
		toSerialize["brandLogo"] = o.BrandLogo.Get()
	}
	if o.BrandServiceGuide.IsSet() {
		toSerialize["brandServiceGuide"] = o.BrandServiceGuide.Get()
	}
	if o.CategoryId.IsSet() {
		toSerialize["categoryId"] = o.CategoryId.Get()
	}
	if o.CategoryNm.IsSet() {
		toSerialize["categoryNm"] = o.CategoryNm.Get()
	}
	if o.CategoryImg.IsSet() {
		toSerialize["categoryImg"] = o.CategoryImg.Get()
	}
	if o.ProductType.IsSet() {
		toSerialize["productType"] = o.ProductType.Get()
	}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	if o.Link.IsSet() {
		toSerialize["link"] = o.Link.Get()
	}
	if !IsNil(o.StoreList) {
		toSerialize["storeList"] = o.StoreList
	}
	return toSerialize, nil
}

type NullablePRODUCTSDETAIL struct {
	value *PRODUCTSDETAIL
	isSet bool
}

func (v NullablePRODUCTSDETAIL) Get() *PRODUCTSDETAIL {
	return v.value
}

func (v *NullablePRODUCTSDETAIL) Set(val *PRODUCTSDETAIL) {
	v.value = val
	v.isSet = true
}

func (v NullablePRODUCTSDETAIL) IsSet() bool {
	return v.isSet
}

func (v *NullablePRODUCTSDETAIL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePRODUCTSDETAIL(val *PRODUCTSDETAIL) *NullablePRODUCTSDETAIL {
	return &NullablePRODUCTSDETAIL{value: val, isSet: true}
}

func (v NullablePRODUCTSDETAIL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePRODUCTSDETAIL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


