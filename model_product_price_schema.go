/*
Sample API

Technical document APIs for API Version 4.

API version: 4.0.0
Contact: quang.huynh@gotit.vn
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gotit_api_go_sdk

import (
	"encoding/json"
)

// checks if the PRODUCTPRICESCHEMA type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PRODUCTPRICESCHEMA{}

// PRODUCTPRICESCHEMA struct for PRODUCTPRICESCHEMA
type PRODUCTPRICESCHEMA struct {
	// Product id/size code
	PriceId NullableInt64 `json:"priceId,omitempty"`
	// Product name/size name
	PriceNm NullableString `json:"priceNm,omitempty"`
	// Product value
	PriceValue NullableInt64 `json:"priceValue,omitempty"`
}

// NewPRODUCTPRICESCHEMA instantiates a new PRODUCTPRICESCHEMA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPRODUCTPRICESCHEMA() *PRODUCTPRICESCHEMA {
	this := PRODUCTPRICESCHEMA{}
	return &this
}

// NewPRODUCTPRICESCHEMAWithDefaults instantiates a new PRODUCTPRICESCHEMA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPRODUCTPRICESCHEMAWithDefaults() *PRODUCTPRICESCHEMA {
	this := PRODUCTPRICESCHEMA{}
	return &this
}

// GetPriceId returns the PriceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTPRICESCHEMA) GetPriceId() int64 {
	if o == nil || IsNil(o.PriceId.Get()) {
		var ret int64
		return ret
	}
	return *o.PriceId.Get()
}

// GetPriceIdOk returns a tuple with the PriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTPRICESCHEMA) GetPriceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceId.Get(), o.PriceId.IsSet()
}

// HasPriceId returns a boolean if a field has been set.
func (o *PRODUCTPRICESCHEMA) HasPriceId() bool {
	if o != nil && o.PriceId.IsSet() {
		return true
	}

	return false
}

// SetPriceId gets a reference to the given NullableInt64 and assigns it to the PriceId field.
func (o *PRODUCTPRICESCHEMA) SetPriceId(v int64) {
	o.PriceId.Set(&v)
}
// SetPriceIdNil sets the value for PriceId to be an explicit nil
func (o *PRODUCTPRICESCHEMA) SetPriceIdNil() {
	o.PriceId.Set(nil)
}

// UnsetPriceId ensures that no value is present for PriceId, not even an explicit nil
func (o *PRODUCTPRICESCHEMA) UnsetPriceId() {
	o.PriceId.Unset()
}

// GetPriceNm returns the PriceNm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTPRICESCHEMA) GetPriceNm() string {
	if o == nil || IsNil(o.PriceNm.Get()) {
		var ret string
		return ret
	}
	return *o.PriceNm.Get()
}

// GetPriceNmOk returns a tuple with the PriceNm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTPRICESCHEMA) GetPriceNmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceNm.Get(), o.PriceNm.IsSet()
}

// HasPriceNm returns a boolean if a field has been set.
func (o *PRODUCTPRICESCHEMA) HasPriceNm() bool {
	if o != nil && o.PriceNm.IsSet() {
		return true
	}

	return false
}

// SetPriceNm gets a reference to the given NullableString and assigns it to the PriceNm field.
func (o *PRODUCTPRICESCHEMA) SetPriceNm(v string) {
	o.PriceNm.Set(&v)
}
// SetPriceNmNil sets the value for PriceNm to be an explicit nil
func (o *PRODUCTPRICESCHEMA) SetPriceNmNil() {
	o.PriceNm.Set(nil)
}

// UnsetPriceNm ensures that no value is present for PriceNm, not even an explicit nil
func (o *PRODUCTPRICESCHEMA) UnsetPriceNm() {
	o.PriceNm.Unset()
}

// GetPriceValue returns the PriceValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PRODUCTPRICESCHEMA) GetPriceValue() int64 {
	if o == nil || IsNil(o.PriceValue.Get()) {
		var ret int64
		return ret
	}
	return *o.PriceValue.Get()
}

// GetPriceValueOk returns a tuple with the PriceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRODUCTPRICESCHEMA) GetPriceValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceValue.Get(), o.PriceValue.IsSet()
}

// HasPriceValue returns a boolean if a field has been set.
func (o *PRODUCTPRICESCHEMA) HasPriceValue() bool {
	if o != nil && o.PriceValue.IsSet() {
		return true
	}

	return false
}

// SetPriceValue gets a reference to the given NullableInt64 and assigns it to the PriceValue field.
func (o *PRODUCTPRICESCHEMA) SetPriceValue(v int64) {
	o.PriceValue.Set(&v)
}
// SetPriceValueNil sets the value for PriceValue to be an explicit nil
func (o *PRODUCTPRICESCHEMA) SetPriceValueNil() {
	o.PriceValue.Set(nil)
}

// UnsetPriceValue ensures that no value is present for PriceValue, not even an explicit nil
func (o *PRODUCTPRICESCHEMA) UnsetPriceValue() {
	o.PriceValue.Unset()
}

func (o PRODUCTPRICESCHEMA) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PRODUCTPRICESCHEMA) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PriceId.IsSet() {
		toSerialize["priceId"] = o.PriceId.Get()
	}
	if o.PriceNm.IsSet() {
		toSerialize["priceNm"] = o.PriceNm.Get()
	}
	if o.PriceValue.IsSet() {
		toSerialize["priceValue"] = o.PriceValue.Get()
	}
	return toSerialize, nil
}

type NullablePRODUCTPRICESCHEMA struct {
	value *PRODUCTPRICESCHEMA
	isSet bool
}

func (v NullablePRODUCTPRICESCHEMA) Get() *PRODUCTPRICESCHEMA {
	return v.value
}

func (v *NullablePRODUCTPRICESCHEMA) Set(val *PRODUCTPRICESCHEMA) {
	v.value = val
	v.isSet = true
}

func (v NullablePRODUCTPRICESCHEMA) IsSet() bool {
	return v.isSet
}

func (v *NullablePRODUCTPRICESCHEMA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePRODUCTPRICESCHEMA(val *PRODUCTPRICESCHEMA) *NullablePRODUCTPRICESCHEMA {
	return &NullablePRODUCTPRICESCHEMA{value: val, isSet: true}
}

func (v NullablePRODUCTPRICESCHEMA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePRODUCTPRICESCHEMA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


